
StopWatch_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001cb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00001cb0  00001d44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800068  00800068  00001d4c  2**0
                  ALLOC
  3 .stab         00000d98  00000000  00000000  00001d4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000007ce  00000000  00000000  00002ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  000032b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  00003412  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  000035a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  000055e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  000066e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  0000766c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  000077ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  00007aae  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000833c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 82 06 	jmp	0xd04	; 0xd04 <__vector_1>
       8:	0c 94 98 06 	jmp	0xd30	; 0xd30 <__vector_2>
       c:	0c 94 b9 06 	jmp	0xd72	; 0xd72 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 4f 06 	jmp	0xc9e	; 0xc9e <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ab 36       	cpi	r26, 0x6B	; 107
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e0 eb       	ldi	r30, 0xB0	; 176
      78:	fc e1       	ldi	r31, 0x1C	; 28
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 30 07 	call	0xe60	; 0xe60 <main>
      8a:	0c 94 56 0e 	jmp	0x1cac	; 0x1cac <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 1f 0e 	jmp	0x1c3e	; 0x1c3e <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 3b 0e 	jmp	0x1c76	; 0x1c76 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 47 0e 	jmp	0x1c8e	; 0x1c8e <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 47 0e 	jmp	0x1c8e	; 0x1c8e <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 1f 0e 	jmp	0x1c3e	; 0x1c3e <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 3b 0e 	jmp	0x1c76	; 0x1c76 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 27 0e 	jmp	0x1c4e	; 0x1c4e <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 43 0e 	jmp	0x1c86	; 0x1c86 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 47 0e 	jmp	0x1c8e	; 0x1c8e <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 47 0e 	jmp	0x1c8e	; 0x1c8e <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 47 0e 	jmp	0x1c8e	; 0x1c8e <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 2f 0e 	jmp	0x1c5e	; 0x1c5e <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 4b 0e 	jmp	0x1c96	; 0x1c96 <__epilogue_restores__+0x20>

00000952 <__pack_f>:
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	fc 01       	movw	r30, r24
     95e:	e4 80       	ldd	r14, Z+4	; 0x04
     960:	f5 80       	ldd	r15, Z+5	; 0x05
     962:	06 81       	ldd	r16, Z+6	; 0x06
     964:	17 81       	ldd	r17, Z+7	; 0x07
     966:	d1 80       	ldd	r13, Z+1	; 0x01
     968:	80 81       	ld	r24, Z
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	48 f4       	brcc	.+18     	; 0x980 <__pack_f+0x2e>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	a0 e1       	ldi	r26, 0x10	; 16
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	e8 2a       	or	r14, r24
     978:	f9 2a       	or	r15, r25
     97a:	0a 2b       	or	r16, r26
     97c:	1b 2b       	or	r17, r27
     97e:	a5 c0       	rjmp	.+330    	; 0xaca <__pack_f+0x178>
     980:	84 30       	cpi	r24, 0x04	; 4
     982:	09 f4       	brne	.+2      	; 0x986 <__pack_f+0x34>
     984:	9f c0       	rjmp	.+318    	; 0xac4 <__pack_f+0x172>
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	21 f4       	brne	.+8      	; 0x992 <__pack_f+0x40>
     98a:	ee 24       	eor	r14, r14
     98c:	ff 24       	eor	r15, r15
     98e:	87 01       	movw	r16, r14
     990:	05 c0       	rjmp	.+10     	; 0x99c <__pack_f+0x4a>
     992:	e1 14       	cp	r14, r1
     994:	f1 04       	cpc	r15, r1
     996:	01 05       	cpc	r16, r1
     998:	11 05       	cpc	r17, r1
     99a:	19 f4       	brne	.+6      	; 0x9a2 <__pack_f+0x50>
     99c:	e0 e0       	ldi	r30, 0x00	; 0
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	96 c0       	rjmp	.+300    	; 0xace <__pack_f+0x17c>
     9a2:	62 81       	ldd	r22, Z+2	; 0x02
     9a4:	73 81       	ldd	r23, Z+3	; 0x03
     9a6:	9f ef       	ldi	r25, 0xFF	; 255
     9a8:	62 38       	cpi	r22, 0x82	; 130
     9aa:	79 07       	cpc	r23, r25
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <__pack_f+0x5e>
     9ae:	5b c0       	rjmp	.+182    	; 0xa66 <__pack_f+0x114>
     9b0:	22 e8       	ldi	r18, 0x82	; 130
     9b2:	3f ef       	ldi	r19, 0xFF	; 255
     9b4:	26 1b       	sub	r18, r22
     9b6:	37 0b       	sbc	r19, r23
     9b8:	2a 31       	cpi	r18, 0x1A	; 26
     9ba:	31 05       	cpc	r19, r1
     9bc:	2c f0       	brlt	.+10     	; 0x9c8 <__pack_f+0x76>
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	2a c0       	rjmp	.+84     	; 0xa1c <__pack_f+0xca>
     9c8:	b8 01       	movw	r22, r16
     9ca:	a7 01       	movw	r20, r14
     9cc:	02 2e       	mov	r0, r18
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__pack_f+0x86>
     9d0:	76 95       	lsr	r23
     9d2:	67 95       	ror	r22
     9d4:	57 95       	ror	r21
     9d6:	47 95       	ror	r20
     9d8:	0a 94       	dec	r0
     9da:	d2 f7       	brpl	.-12     	; 0x9d0 <__pack_f+0x7e>
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	a0 e0       	ldi	r26, 0x00	; 0
     9e2:	b0 e0       	ldi	r27, 0x00	; 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__pack_f+0x9c>
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	aa 1f       	adc	r26, r26
     9ec:	bb 1f       	adc	r27, r27
     9ee:	2a 95       	dec	r18
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <__pack_f+0x94>
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	a1 09       	sbc	r26, r1
     9f6:	b1 09       	sbc	r27, r1
     9f8:	8e 21       	and	r24, r14
     9fa:	9f 21       	and	r25, r15
     9fc:	a0 23       	and	r26, r16
     9fe:	b1 23       	and	r27, r17
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	a1 05       	cpc	r26, r1
     a04:	b1 05       	cpc	r27, r1
     a06:	21 f0       	breq	.+8      	; 0xa10 <__pack_f+0xbe>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	a0 e0       	ldi	r26, 0x00	; 0
     a0e:	b0 e0       	ldi	r27, 0x00	; 0
     a10:	9a 01       	movw	r18, r20
     a12:	ab 01       	movw	r20, r22
     a14:	28 2b       	or	r18, r24
     a16:	39 2b       	or	r19, r25
     a18:	4a 2b       	or	r20, r26
     a1a:	5b 2b       	or	r21, r27
     a1c:	da 01       	movw	r26, r20
     a1e:	c9 01       	movw	r24, r18
     a20:	8f 77       	andi	r24, 0x7F	; 127
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	a0 70       	andi	r26, 0x00	; 0
     a26:	b0 70       	andi	r27, 0x00	; 0
     a28:	80 34       	cpi	r24, 0x40	; 64
     a2a:	91 05       	cpc	r25, r1
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	39 f4       	brne	.+14     	; 0xa40 <__pack_f+0xee>
     a32:	27 ff       	sbrs	r18, 7
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__pack_f+0xf6>
     a36:	20 5c       	subi	r18, 0xC0	; 192
     a38:	3f 4f       	sbci	r19, 0xFF	; 255
     a3a:	4f 4f       	sbci	r20, 0xFF	; 255
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <__pack_f+0xf6>
     a40:	21 5c       	subi	r18, 0xC1	; 193
     a42:	3f 4f       	sbci	r19, 0xFF	; 255
     a44:	4f 4f       	sbci	r20, 0xFF	; 255
     a46:	5f 4f       	sbci	r21, 0xFF	; 255
     a48:	e0 e0       	ldi	r30, 0x00	; 0
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	20 30       	cpi	r18, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	3a 07       	cpc	r19, r26
     a52:	a0 e0       	ldi	r26, 0x00	; 0
     a54:	4a 07       	cpc	r20, r26
     a56:	a0 e4       	ldi	r26, 0x40	; 64
     a58:	5a 07       	cpc	r21, r26
     a5a:	10 f0       	brcs	.+4      	; 0xa60 <__pack_f+0x10e>
     a5c:	e1 e0       	ldi	r30, 0x01	; 1
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	79 01       	movw	r14, r18
     a62:	8a 01       	movw	r16, r20
     a64:	27 c0       	rjmp	.+78     	; 0xab4 <__pack_f+0x162>
     a66:	60 38       	cpi	r22, 0x80	; 128
     a68:	71 05       	cpc	r23, r1
     a6a:	64 f5       	brge	.+88     	; 0xac4 <__pack_f+0x172>
     a6c:	fb 01       	movw	r30, r22
     a6e:	e1 58       	subi	r30, 0x81	; 129
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	d8 01       	movw	r26, r16
     a74:	c7 01       	movw	r24, r14
     a76:	8f 77       	andi	r24, 0x7F	; 127
     a78:	90 70       	andi	r25, 0x00	; 0
     a7a:	a0 70       	andi	r26, 0x00	; 0
     a7c:	b0 70       	andi	r27, 0x00	; 0
     a7e:	80 34       	cpi	r24, 0x40	; 64
     a80:	91 05       	cpc	r25, r1
     a82:	a1 05       	cpc	r26, r1
     a84:	b1 05       	cpc	r27, r1
     a86:	39 f4       	brne	.+14     	; 0xa96 <__pack_f+0x144>
     a88:	e7 fe       	sbrs	r14, 7
     a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <__pack_f+0x154>
     a8c:	80 e4       	ldi	r24, 0x40	; 64
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	a0 e0       	ldi	r26, 0x00	; 0
     a92:	b0 e0       	ldi	r27, 0x00	; 0
     a94:	04 c0       	rjmp	.+8      	; 0xa9e <__pack_f+0x14c>
     a96:	8f e3       	ldi	r24, 0x3F	; 63
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e8 0e       	add	r14, r24
     aa0:	f9 1e       	adc	r15, r25
     aa2:	0a 1f       	adc	r16, r26
     aa4:	1b 1f       	adc	r17, r27
     aa6:	17 ff       	sbrs	r17, 7
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <__pack_f+0x162>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	31 96       	adiw	r30, 0x01	; 1
     ab4:	87 e0       	ldi	r24, 0x07	; 7
     ab6:	16 95       	lsr	r17
     ab8:	07 95       	ror	r16
     aba:	f7 94       	ror	r15
     abc:	e7 94       	ror	r14
     abe:	8a 95       	dec	r24
     ac0:	d1 f7       	brne	.-12     	; 0xab6 <__pack_f+0x164>
     ac2:	05 c0       	rjmp	.+10     	; 0xace <__pack_f+0x17c>
     ac4:	ee 24       	eor	r14, r14
     ac6:	ff 24       	eor	r15, r15
     ac8:	87 01       	movw	r16, r14
     aca:	ef ef       	ldi	r30, 0xFF	; 255
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	6e 2f       	mov	r22, r30
     ad0:	67 95       	ror	r22
     ad2:	66 27       	eor	r22, r22
     ad4:	67 95       	ror	r22
     ad6:	90 2f       	mov	r25, r16
     ad8:	9f 77       	andi	r25, 0x7F	; 127
     ada:	d7 94       	ror	r13
     adc:	dd 24       	eor	r13, r13
     ade:	d7 94       	ror	r13
     ae0:	8e 2f       	mov	r24, r30
     ae2:	86 95       	lsr	r24
     ae4:	49 2f       	mov	r20, r25
     ae6:	46 2b       	or	r20, r22
     ae8:	58 2f       	mov	r21, r24
     aea:	5d 29       	or	r21, r13
     aec:	b7 01       	movw	r22, r14
     aee:	ca 01       	movw	r24, r20
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	df 90       	pop	r13
     afa:	08 95       	ret

00000afc <__unpack_f>:
     afc:	fc 01       	movw	r30, r24
     afe:	db 01       	movw	r26, r22
     b00:	40 81       	ld	r20, Z
     b02:	51 81       	ldd	r21, Z+1	; 0x01
     b04:	22 81       	ldd	r18, Z+2	; 0x02
     b06:	62 2f       	mov	r22, r18
     b08:	6f 77       	andi	r22, 0x7F	; 127
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	22 1f       	adc	r18, r18
     b0e:	22 27       	eor	r18, r18
     b10:	22 1f       	adc	r18, r18
     b12:	93 81       	ldd	r25, Z+3	; 0x03
     b14:	89 2f       	mov	r24, r25
     b16:	88 0f       	add	r24, r24
     b18:	82 2b       	or	r24, r18
     b1a:	28 2f       	mov	r18, r24
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	99 1f       	adc	r25, r25
     b20:	99 27       	eor	r25, r25
     b22:	99 1f       	adc	r25, r25
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	9c 93       	st	X, r25
     b28:	11 97       	sbiw	r26, 0x01	; 1
     b2a:	21 15       	cp	r18, r1
     b2c:	31 05       	cpc	r19, r1
     b2e:	a9 f5       	brne	.+106    	; 0xb9a <__unpack_f+0x9e>
     b30:	41 15       	cp	r20, r1
     b32:	51 05       	cpc	r21, r1
     b34:	61 05       	cpc	r22, r1
     b36:	71 05       	cpc	r23, r1
     b38:	11 f4       	brne	.+4      	; 0xb3e <__unpack_f+0x42>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	37 c0       	rjmp	.+110    	; 0xbac <__unpack_f+0xb0>
     b3e:	82 e8       	ldi	r24, 0x82	; 130
     b40:	9f ef       	ldi	r25, 0xFF	; 255
     b42:	13 96       	adiw	r26, 0x03	; 3
     b44:	9c 93       	st	X, r25
     b46:	8e 93       	st	-X, r24
     b48:	12 97       	sbiw	r26, 0x02	; 2
     b4a:	9a 01       	movw	r18, r20
     b4c:	ab 01       	movw	r20, r22
     b4e:	67 e0       	ldi	r22, 0x07	; 7
     b50:	22 0f       	add	r18, r18
     b52:	33 1f       	adc	r19, r19
     b54:	44 1f       	adc	r20, r20
     b56:	55 1f       	adc	r21, r21
     b58:	6a 95       	dec	r22
     b5a:	d1 f7       	brne	.-12     	; 0xb50 <__unpack_f+0x54>
     b5c:	83 e0       	ldi	r24, 0x03	; 3
     b5e:	8c 93       	st	X, r24
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <__unpack_f+0x80>
     b62:	22 0f       	add	r18, r18
     b64:	33 1f       	adc	r19, r19
     b66:	44 1f       	adc	r20, r20
     b68:	55 1f       	adc	r21, r21
     b6a:	12 96       	adiw	r26, 0x02	; 2
     b6c:	8d 91       	ld	r24, X+
     b6e:	9c 91       	ld	r25, X
     b70:	13 97       	sbiw	r26, 0x03	; 3
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	13 96       	adiw	r26, 0x03	; 3
     b76:	9c 93       	st	X, r25
     b78:	8e 93       	st	-X, r24
     b7a:	12 97       	sbiw	r26, 0x02	; 2
     b7c:	20 30       	cpi	r18, 0x00	; 0
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	38 07       	cpc	r19, r24
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	48 07       	cpc	r20, r24
     b86:	80 e4       	ldi	r24, 0x40	; 64
     b88:	58 07       	cpc	r21, r24
     b8a:	58 f3       	brcs	.-42     	; 0xb62 <__unpack_f+0x66>
     b8c:	14 96       	adiw	r26, 0x04	; 4
     b8e:	2d 93       	st	X+, r18
     b90:	3d 93       	st	X+, r19
     b92:	4d 93       	st	X+, r20
     b94:	5c 93       	st	X, r21
     b96:	17 97       	sbiw	r26, 0x07	; 7
     b98:	08 95       	ret
     b9a:	2f 3f       	cpi	r18, 0xFF	; 255
     b9c:	31 05       	cpc	r19, r1
     b9e:	79 f4       	brne	.+30     	; 0xbbe <__unpack_f+0xc2>
     ba0:	41 15       	cp	r20, r1
     ba2:	51 05       	cpc	r21, r1
     ba4:	61 05       	cpc	r22, r1
     ba6:	71 05       	cpc	r23, r1
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <__unpack_f+0xb4>
     baa:	84 e0       	ldi	r24, 0x04	; 4
     bac:	8c 93       	st	X, r24
     bae:	08 95       	ret
     bb0:	64 ff       	sbrs	r22, 4
     bb2:	03 c0       	rjmp	.+6      	; 0xbba <__unpack_f+0xbe>
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	8c 93       	st	X, r24
     bb8:	12 c0       	rjmp	.+36     	; 0xbde <__unpack_f+0xe2>
     bba:	1c 92       	st	X, r1
     bbc:	10 c0       	rjmp	.+32     	; 0xbde <__unpack_f+0xe2>
     bbe:	2f 57       	subi	r18, 0x7F	; 127
     bc0:	30 40       	sbci	r19, 0x00	; 0
     bc2:	13 96       	adiw	r26, 0x03	; 3
     bc4:	3c 93       	st	X, r19
     bc6:	2e 93       	st	-X, r18
     bc8:	12 97       	sbiw	r26, 0x02	; 2
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	8c 93       	st	X, r24
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	44 0f       	add	r20, r20
     bd2:	55 1f       	adc	r21, r21
     bd4:	66 1f       	adc	r22, r22
     bd6:	77 1f       	adc	r23, r23
     bd8:	8a 95       	dec	r24
     bda:	d1 f7       	brne	.-12     	; 0xbd0 <__unpack_f+0xd4>
     bdc:	70 64       	ori	r23, 0x40	; 64
     bde:	14 96       	adiw	r26, 0x04	; 4
     be0:	4d 93       	st	X+, r20
     be2:	5d 93       	st	X+, r21
     be4:	6d 93       	st	X+, r22
     be6:	7c 93       	st	X, r23
     be8:	17 97       	sbiw	r26, 0x07	; 7
     bea:	08 95       	ret

00000bec <__fpcmp_parts_f>:
     bec:	1f 93       	push	r17
     bee:	dc 01       	movw	r26, r24
     bf0:	fb 01       	movw	r30, r22
     bf2:	9c 91       	ld	r25, X
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	08 f4       	brcc	.+2      	; 0xbfa <__fpcmp_parts_f+0xe>
     bf8:	47 c0       	rjmp	.+142    	; 0xc88 <__fpcmp_parts_f+0x9c>
     bfa:	80 81       	ld	r24, Z
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	08 f4       	brcc	.+2      	; 0xc02 <__fpcmp_parts_f+0x16>
     c00:	43 c0       	rjmp	.+134    	; 0xc88 <__fpcmp_parts_f+0x9c>
     c02:	94 30       	cpi	r25, 0x04	; 4
     c04:	51 f4       	brne	.+20     	; 0xc1a <__fpcmp_parts_f+0x2e>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	1c 91       	ld	r17, X
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	99 f5       	brne	.+102    	; 0xc74 <__fpcmp_parts_f+0x88>
     c0e:	81 81       	ldd	r24, Z+1	; 0x01
     c10:	68 2f       	mov	r22, r24
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	61 1b       	sub	r22, r17
     c16:	71 09       	sbc	r23, r1
     c18:	3f c0       	rjmp	.+126    	; 0xc98 <__fpcmp_parts_f+0xac>
     c1a:	84 30       	cpi	r24, 0x04	; 4
     c1c:	21 f0       	breq	.+8      	; 0xc26 <__fpcmp_parts_f+0x3a>
     c1e:	92 30       	cpi	r25, 0x02	; 2
     c20:	31 f4       	brne	.+12     	; 0xc2e <__fpcmp_parts_f+0x42>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	b9 f1       	breq	.+110    	; 0xc94 <__fpcmp_parts_f+0xa8>
     c26:	81 81       	ldd	r24, Z+1	; 0x01
     c28:	88 23       	and	r24, r24
     c2a:	89 f1       	breq	.+98     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c2c:	2d c0       	rjmp	.+90     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	11 97       	sbiw	r26, 0x01	; 1
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	f1 f0       	breq	.+60     	; 0xc74 <__fpcmp_parts_f+0x88>
     c38:	81 81       	ldd	r24, Z+1	; 0x01
     c3a:	18 17       	cp	r17, r24
     c3c:	d9 f4       	brne	.+54     	; 0xc74 <__fpcmp_parts_f+0x88>
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	2d 91       	ld	r18, X+
     c42:	3c 91       	ld	r19, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	82 81       	ldd	r24, Z+2	; 0x02
     c48:	93 81       	ldd	r25, Z+3	; 0x03
     c4a:	82 17       	cp	r24, r18
     c4c:	93 07       	cpc	r25, r19
     c4e:	94 f0       	brlt	.+36     	; 0xc74 <__fpcmp_parts_f+0x88>
     c50:	28 17       	cp	r18, r24
     c52:	39 07       	cpc	r19, r25
     c54:	bc f0       	brlt	.+46     	; 0xc84 <__fpcmp_parts_f+0x98>
     c56:	14 96       	adiw	r26, 0x04	; 4
     c58:	8d 91       	ld	r24, X+
     c5a:	9d 91       	ld	r25, X+
     c5c:	0d 90       	ld	r0, X+
     c5e:	bc 91       	ld	r27, X
     c60:	a0 2d       	mov	r26, r0
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	28 17       	cp	r18, r24
     c6c:	39 07       	cpc	r19, r25
     c6e:	4a 07       	cpc	r20, r26
     c70:	5b 07       	cpc	r21, r27
     c72:	18 f4       	brcc	.+6      	; 0xc7a <__fpcmp_parts_f+0x8e>
     c74:	11 23       	and	r17, r17
     c76:	41 f0       	breq	.+16     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c78:	0a c0       	rjmp	.+20     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c7a:	82 17       	cp	r24, r18
     c7c:	93 07       	cpc	r25, r19
     c7e:	a4 07       	cpc	r26, r20
     c80:	b5 07       	cpc	r27, r21
     c82:	40 f4       	brcc	.+16     	; 0xc94 <__fpcmp_parts_f+0xa8>
     c84:	11 23       	and	r17, r17
     c86:	19 f0       	breq	.+6      	; 0xc8e <__fpcmp_parts_f+0xa2>
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <__fpcmp_parts_f+0xac>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <__fpcmp_parts_f+0xac>
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	cb 01       	movw	r24, r22
     c9a:	1f 91       	pop	r17
     c9c:	08 95       	ret

00000c9e <__vector_7>:
unsigned char minutes=0;
unsigned char hours=0;


ISR(TIMER1_COMPA_vect)
{
     c9e:	1f 92       	push	r1
     ca0:	0f 92       	push	r0
     ca2:	0f b6       	in	r0, 0x3f	; 63
     ca4:	0f 92       	push	r0
     ca6:	11 24       	eor	r1, r1
     ca8:	8f 93       	push	r24
     caa:	df 93       	push	r29
     cac:	cf 93       	push	r28
     cae:	cd b7       	in	r28, 0x3d	; 61
     cb0:	de b7       	in	r29, 0x3e	; 62
	seconds++;
     cb2:	80 91 68 00 	lds	r24, 0x0068
     cb6:	8f 5f       	subi	r24, 0xFF	; 255
     cb8:	80 93 68 00 	sts	0x0068, r24
	if(seconds == 60)
     cbc:	80 91 68 00 	lds	r24, 0x0068
     cc0:	8c 33       	cpi	r24, 0x3C	; 60
     cc2:	39 f4       	brne	.+14     	; 0xcd2 <__vector_7+0x34>
	{
	seconds = 0;
     cc4:	10 92 68 00 	sts	0x0068, r1
	minutes++;
     cc8:	80 91 69 00 	lds	r24, 0x0069
     ccc:	8f 5f       	subi	r24, 0xFF	; 255
     cce:	80 93 69 00 	sts	0x0069, r24
	}
	if(minutes == 60)
     cd2:	80 91 69 00 	lds	r24, 0x0069
     cd6:	8c 33       	cpi	r24, 0x3C	; 60
     cd8:	39 f4       	brne	.+14     	; 0xce8 <__vector_7+0x4a>
	{
	minutes = 0;
     cda:	10 92 69 00 	sts	0x0069, r1
	hours++;
     cde:	80 91 6a 00 	lds	r24, 0x006A
     ce2:	8f 5f       	subi	r24, 0xFF	; 255
     ce4:	80 93 6a 00 	sts	0x006A, r24
	}
	if(hours > 23)
     ce8:	80 91 6a 00 	lds	r24, 0x006A
     cec:	88 31       	cpi	r24, 0x18	; 24
     cee:	10 f0       	brcs	.+4      	; 0xcf4 <__vector_7+0x56>
	hours = 0;
     cf0:	10 92 6a 00 	sts	0x006A, r1
}
     cf4:	cf 91       	pop	r28
     cf6:	df 91       	pop	r29
     cf8:	8f 91       	pop	r24
     cfa:	0f 90       	pop	r0
     cfc:	0f be       	out	0x3f, r0	; 63
     cfe:	0f 90       	pop	r0
     d00:	1f 90       	pop	r1
     d02:	18 95       	reti

00000d04 <__vector_1>:
ISR(INT0_vect)
{
     d04:	1f 92       	push	r1
     d06:	0f 92       	push	r0
     d08:	0f b6       	in	r0, 0x3f	; 63
     d0a:	0f 92       	push	r0
     d0c:	11 24       	eor	r1, r1
     d0e:	df 93       	push	r29
     d10:	cf 93       	push	r28
     d12:	cd b7       	in	r28, 0x3d	; 61
     d14:	de b7       	in	r29, 0x3e	; 62
	seconds=0;
     d16:	10 92 68 00 	sts	0x0068, r1
	minutes=0;
     d1a:	10 92 69 00 	sts	0x0069, r1
	hours=0;
     d1e:	10 92 6a 00 	sts	0x006A, r1

}
     d22:	cf 91       	pop	r28
     d24:	df 91       	pop	r29
     d26:	0f 90       	pop	r0
     d28:	0f be       	out	0x3f, r0	; 63
     d2a:	0f 90       	pop	r0
     d2c:	1f 90       	pop	r1
     d2e:	18 95       	reti

00000d30 <__vector_2>:
ISR(INT1_vect)
{
     d30:	1f 92       	push	r1
     d32:	0f 92       	push	r0
     d34:	0f b6       	in	r0, 0x3f	; 63
     d36:	0f 92       	push	r0
     d38:	11 24       	eor	r1, r1
     d3a:	8f 93       	push	r24
     d3c:	af 93       	push	r26
     d3e:	bf 93       	push	r27
     d40:	ef 93       	push	r30
     d42:	ff 93       	push	r31
     d44:	df 93       	push	r29
     d46:	cf 93       	push	r28
     d48:	cd b7       	in	r28, 0x3d	; 61
     d4a:	de b7       	in	r29, 0x3e	; 62
	TCCR1B &= ~(1<<CS10) &~(1<<CS12);
     d4c:	ae e4       	ldi	r26, 0x4E	; 78
     d4e:	b0 e0       	ldi	r27, 0x00	; 0
     d50:	ee e4       	ldi	r30, 0x4E	; 78
     d52:	f0 e0       	ldi	r31, 0x00	; 0
     d54:	80 81       	ld	r24, Z
     d56:	8a 7f       	andi	r24, 0xFA	; 250
     d58:	8c 93       	st	X, r24

}
     d5a:	cf 91       	pop	r28
     d5c:	df 91       	pop	r29
     d5e:	ff 91       	pop	r31
     d60:	ef 91       	pop	r30
     d62:	bf 91       	pop	r27
     d64:	af 91       	pop	r26
     d66:	8f 91       	pop	r24
     d68:	0f 90       	pop	r0
     d6a:	0f be       	out	0x3f, r0	; 63
     d6c:	0f 90       	pop	r0
     d6e:	1f 90       	pop	r1
     d70:	18 95       	reti

00000d72 <__vector_3>:
ISR(INT2_vect)
{
     d72:	1f 92       	push	r1
     d74:	0f 92       	push	r0
     d76:	0f b6       	in	r0, 0x3f	; 63
     d78:	0f 92       	push	r0
     d7a:	11 24       	eor	r1, r1
     d7c:	8f 93       	push	r24
     d7e:	ef 93       	push	r30
     d80:	ff 93       	push	r31
     d82:	df 93       	push	r29
     d84:	cf 93       	push	r28
     d86:	cd b7       	in	r28, 0x3d	; 61
     d88:	de b7       	in	r29, 0x3e	; 62
	TCCR1B = (1<<WGM12) | (1<<CS10)| (1<<CS12);
     d8a:	ee e4       	ldi	r30, 0x4E	; 78
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	8d e0       	ldi	r24, 0x0D	; 13
     d90:	80 83       	st	Z, r24

}
     d92:	cf 91       	pop	r28
     d94:	df 91       	pop	r29
     d96:	ff 91       	pop	r31
     d98:	ef 91       	pop	r30
     d9a:	8f 91       	pop	r24
     d9c:	0f 90       	pop	r0
     d9e:	0f be       	out	0x3f, r0	; 63
     da0:	0f 90       	pop	r0
     da2:	1f 90       	pop	r1
     da4:	18 95       	reti

00000da6 <INT0_Init>:
void INT0_Init(void)
{
     da6:	df 93       	push	r29
     da8:	cf 93       	push	r28
     daa:	cd b7       	in	r28, 0x3d	; 61
     dac:	de b7       	in	r29, 0x3e	; 62
	GICR|=(1<<INT0);
     dae:	ab e5       	ldi	r26, 0x5B	; 91
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	eb e5       	ldi	r30, 0x5B	; 91
     db4:	f0 e0       	ldi	r31, 0x00	; 0
     db6:	80 81       	ld	r24, Z
     db8:	80 64       	ori	r24, 0x40	; 64
     dba:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC01);//falling edge
     dbc:	a5 e5       	ldi	r26, 0x55	; 85
     dbe:	b0 e0       	ldi	r27, 0x00	; 0
     dc0:	e5 e5       	ldi	r30, 0x55	; 85
     dc2:	f0 e0       	ldi	r31, 0x00	; 0
     dc4:	80 81       	ld	r24, Z
     dc6:	82 60       	ori	r24, 0x02	; 2
     dc8:	8c 93       	st	X, r24
}
     dca:	cf 91       	pop	r28
     dcc:	df 91       	pop	r29
     dce:	08 95       	ret

00000dd0 <INT1_Init>:
void INT1_Init(void)
{
     dd0:	df 93       	push	r29
     dd2:	cf 93       	push	r28
     dd4:	cd b7       	in	r28, 0x3d	; 61
     dd6:	de b7       	in	r29, 0x3e	; 62
	GICR|=(1<<INT1);
     dd8:	ab e5       	ldi	r26, 0x5B	; 91
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	eb e5       	ldi	r30, 0x5B	; 91
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	80 81       	ld	r24, Z
     de2:	80 68       	ori	r24, 0x80	; 128
     de4:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC10)|(1<<ISC11);//Rising edge
     de6:	a5 e5       	ldi	r26, 0x55	; 85
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	e5 e5       	ldi	r30, 0x55	; 85
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	80 81       	ld	r24, Z
     df0:	8c 60       	ori	r24, 0x0C	; 12
     df2:	8c 93       	st	X, r24
}
     df4:	cf 91       	pop	r28
     df6:	df 91       	pop	r29
     df8:	08 95       	ret

00000dfa <INT2_Init>:
void INT2_Init(void)
{
     dfa:	df 93       	push	r29
     dfc:	cf 93       	push	r28
     dfe:	cd b7       	in	r28, 0x3d	; 61
     e00:	de b7       	in	r29, 0x3e	; 62
	GICR|=(1<<INT2);
     e02:	ab e5       	ldi	r26, 0x5B	; 91
     e04:	b0 e0       	ldi	r27, 0x00	; 0
     e06:	eb e5       	ldi	r30, 0x5B	; 91
     e08:	f0 e0       	ldi	r31, 0x00	; 0
     e0a:	80 81       	ld	r24, Z
     e0c:	80 62       	ori	r24, 0x20	; 32
     e0e:	8c 93       	st	X, r24

}
     e10:	cf 91       	pop	r28
     e12:	df 91       	pop	r29
     e14:	08 95       	ret

00000e16 <Timer1_Init>:
void Timer1_Init(unsigned int CompareValue)
{
     e16:	df 93       	push	r29
     e18:	cf 93       	push	r28
     e1a:	00 d0       	rcall	.+0      	; 0xe1c <Timer1_Init+0x6>
     e1c:	cd b7       	in	r28, 0x3d	; 61
     e1e:	de b7       	in	r29, 0x3e	; 62
     e20:	9a 83       	std	Y+2, r25	; 0x02
     e22:	89 83       	std	Y+1, r24	; 0x01
	TCNT1 = 0;
     e24:	ec e4       	ldi	r30, 0x4C	; 76
     e26:	f0 e0       	ldi	r31, 0x00	; 0
     e28:	11 82       	std	Z+1, r1	; 0x01
     e2a:	10 82       	st	Z, r1

	OCR1A = CompareValue;  // compare value = 1000ms
     e2c:	ea e4       	ldi	r30, 0x4A	; 74
     e2e:	f0 e0       	ldi	r31, 0x00	; 0
     e30:	89 81       	ldd	r24, Y+1	; 0x01
     e32:	9a 81       	ldd	r25, Y+2	; 0x02
     e34:	91 83       	std	Z+1, r25	; 0x01
     e36:	80 83       	st	Z, r24

	TIMSK |= (1<<OCIE1A); // Enabling Timer1 CompareA Interrupt
     e38:	a9 e5       	ldi	r26, 0x59	; 89
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	e9 e5       	ldi	r30, 0x59	; 89
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	80 81       	ld	r24, Z
     e42:	80 61       	ori	r24, 0x10	; 16
     e44:	8c 93       	st	X, r24

	TCCR1A = (1<<FOC1A)|(1<<FOC1B);
     e46:	ef e4       	ldi	r30, 0x4F	; 79
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	8c e0       	ldi	r24, 0x0C	; 12
     e4c:	80 83       	st	Z, r24

	TCCR1B = (1<<WGM12) | (1<<CS10)| (1<<CS12);// CTC Mode 4
     e4e:	ee e4       	ldi	r30, 0x4E	; 78
     e50:	f0 e0       	ldi	r31, 0x00	; 0
     e52:	8d e0       	ldi	r24, 0x0D	; 13
     e54:	80 83       	st	Z, r24

}
     e56:	0f 90       	pop	r0
     e58:	0f 90       	pop	r0
     e5a:	cf 91       	pop	r28
     e5c:	df 91       	pop	r29
     e5e:	08 95       	ret

00000e60 <main>:
int main(void)
{
     e60:	0f 93       	push	r16
     e62:	1f 93       	push	r17
     e64:	df 93       	push	r29
     e66:	cf 93       	push	r28
     e68:	cd b7       	in	r28, 0x3d	; 61
     e6a:	de b7       	in	r29, 0x3e	; 62
     e6c:	c0 59       	subi	r28, 0x90	; 144
     e6e:	d0 40       	sbci	r29, 0x00	; 0
     e70:	0f b6       	in	r0, 0x3f	; 63
     e72:	f8 94       	cli
     e74:	de bf       	out	0x3e, r29	; 62
     e76:	0f be       	out	0x3f, r0	; 63
     e78:	cd bf       	out	0x3d, r28	; 61
	DDRC |= 0x0F;
     e7a:	a4 e3       	ldi	r26, 0x34	; 52
     e7c:	b0 e0       	ldi	r27, 0x00	; 0
     e7e:	e4 e3       	ldi	r30, 0x34	; 52
     e80:	f0 e0       	ldi	r31, 0x00	; 0
     e82:	80 81       	ld	r24, Z
     e84:	8f 60       	ori	r24, 0x0F	; 15
     e86:	8c 93       	st	X, r24
	PORTC|=0x0F;
     e88:	a5 e3       	ldi	r26, 0x35	; 53
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	e5 e3       	ldi	r30, 0x35	; 53
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	8f 60       	ori	r24, 0x0F	; 15
     e94:	8c 93       	st	X, r24
	DDRA |= 0x3F;
     e96:	aa e3       	ldi	r26, 0x3A	; 58
     e98:	b0 e0       	ldi	r27, 0x00	; 0
     e9a:	ea e3       	ldi	r30, 0x3A	; 58
     e9c:	f0 e0       	ldi	r31, 0x00	; 0
     e9e:	80 81       	ld	r24, Z
     ea0:	8f 63       	ori	r24, 0x3F	; 63
     ea2:	8c 93       	st	X, r24
	PORTA|= 0x3F;//enabling 6 control pins in portA
     ea4:	ab e3       	ldi	r26, 0x3B	; 59
     ea6:	b0 e0       	ldi	r27, 0x00	; 0
     ea8:	eb e3       	ldi	r30, 0x3B	; 59
     eaa:	f0 e0       	ldi	r31, 0x00	; 0
     eac:	80 81       	ld	r24, Z
     eae:	8f 63       	ori	r24, 0x3F	; 63
     eb0:	8c 93       	st	X, r24
	SREG |= (1<<7); // Enable global interrupts in MC
     eb2:	af e5       	ldi	r26, 0x5F	; 95
     eb4:	b0 e0       	ldi	r27, 0x00	; 0
     eb6:	ef e5       	ldi	r30, 0x5F	; 95
     eb8:	f0 e0       	ldi	r31, 0x00	; 0
     eba:	80 81       	ld	r24, Z
     ebc:	80 68       	ori	r24, 0x80	; 128
     ebe:	8c 93       	st	X, r24
	DDRD &= 0xFC;//PD2 and PD3 as input pins
     ec0:	a1 e3       	ldi	r26, 0x31	; 49
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	e1 e3       	ldi	r30, 0x31	; 49
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	80 81       	ld	r24, Z
     eca:	8c 7f       	andi	r24, 0xFC	; 252
     ecc:	8c 93       	st	X, r24
	DDRB &= 0xFB;//PB2 as input pin
     ece:	a7 e3       	ldi	r26, 0x37	; 55
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	e7 e3       	ldi	r30, 0x37	; 55
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	80 81       	ld	r24, Z
     ed8:	8b 7f       	andi	r24, 0xFB	; 251
     eda:	8c 93       	st	X, r24
	PORTD |=(1<<PD2);//internal pull up resistor configuration
     edc:	a2 e3       	ldi	r26, 0x32	; 50
     ede:	b0 e0       	ldi	r27, 0x00	; 0
     ee0:	e2 e3       	ldi	r30, 0x32	; 50
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	80 81       	ld	r24, Z
     ee6:	84 60       	ori	r24, 0x04	; 4
     ee8:	8c 93       	st	X, r24
	PORTB |=(1<<PB2);//internal pull up resistor configuration
     eea:	a8 e3       	ldi	r26, 0x38	; 56
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	e8 e3       	ldi	r30, 0x38	; 56
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	80 81       	ld	r24, Z
     ef4:	84 60       	ori	r24, 0x04	; 4
     ef6:	8c 93       	st	X, r24


	INT0_Init();// Enable external INT0
     ef8:	0e 94 d3 06 	call	0xda6	; 0xda6 <INT0_Init>
	INT1_Init();// Enable external INT1
     efc:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <INT1_Init>
	INT2_Init();// Enable external INT2
     f00:	0e 94 fd 06 	call	0xdfa	; 0xdfa <INT2_Init>

	Timer1_Init(1000);
     f04:	88 ee       	ldi	r24, 0xE8	; 232
     f06:	93 e0       	ldi	r25, 0x03	; 3
     f08:	0e 94 0b 07 	call	0xe16	; 0xe16 <Timer1_Init>


	while(1)
	{
    	PORTC =(PORTC&0xF0)|(seconds%10);//display second 1
     f0c:	a5 e3       	ldi	r26, 0x35	; 53
     f0e:	b0 e0       	ldi	r27, 0x00	; 0
     f10:	e5 e3       	ldi	r30, 0x35	; 53
     f12:	f0 e0       	ldi	r31, 0x00	; 0
     f14:	80 81       	ld	r24, Z
     f16:	28 2f       	mov	r18, r24
     f18:	20 7f       	andi	r18, 0xF0	; 240
     f1a:	80 91 68 00 	lds	r24, 0x0068
     f1e:	9a e0       	ldi	r25, 0x0A	; 10
     f20:	69 2f       	mov	r22, r25
     f22:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <__udivmodqi4>
     f26:	89 2f       	mov	r24, r25
     f28:	82 2b       	or	r24, r18
     f2a:	8c 93       	st	X, r24
		PORTA &=0xC0;//disable initialized PORTA pins
     f2c:	ab e3       	ldi	r26, 0x3B	; 59
     f2e:	b0 e0       	ldi	r27, 0x00	; 0
     f30:	eb e3       	ldi	r30, 0x3B	; 59
     f32:	f0 e0       	ldi	r31, 0x00	; 0
     f34:	80 81       	ld	r24, Z
     f36:	80 7c       	andi	r24, 0xC0	; 192
     f38:	8c 93       	st	X, r24
		PORTA |= 0x20;//enable PA5 for second 1
     f3a:	ab e3       	ldi	r26, 0x3B	; 59
     f3c:	b0 e0       	ldi	r27, 0x00	; 0
     f3e:	eb e3       	ldi	r30, 0x3B	; 59
     f40:	f0 e0       	ldi	r31, 0x00	; 0
     f42:	80 81       	ld	r24, Z
     f44:	80 62       	ori	r24, 0x20	; 32
     f46:	8c 93       	st	X, r24
     f48:	fe 01       	movw	r30, r28
     f4a:	e3 57       	subi	r30, 0x73	; 115
     f4c:	ff 4f       	sbci	r31, 0xFF	; 255
     f4e:	80 e0       	ldi	r24, 0x00	; 0
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	a0 e2       	ldi	r26, 0x20	; 32
     f54:	b1 e4       	ldi	r27, 0x41	; 65
     f56:	80 83       	st	Z, r24
     f58:	91 83       	std	Z+1, r25	; 0x01
     f5a:	a2 83       	std	Z+2, r26	; 0x02
     f5c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     f5e:	8e 01       	movw	r16, r28
     f60:	07 57       	subi	r16, 0x77	; 119
     f62:	1f 4f       	sbci	r17, 0xFF	; 255
     f64:	fe 01       	movw	r30, r28
     f66:	e3 57       	subi	r30, 0x73	; 115
     f68:	ff 4f       	sbci	r31, 0xFF	; 255
     f6a:	60 81       	ld	r22, Z
     f6c:	71 81       	ldd	r23, Z+1	; 0x01
     f6e:	82 81       	ldd	r24, Z+2	; 0x02
     f70:	93 81       	ldd	r25, Z+3	; 0x03
     f72:	2b ea       	ldi	r18, 0xAB	; 171
     f74:	3a ea       	ldi	r19, 0xAA	; 170
     f76:	4a ea       	ldi	r20, 0xAA	; 170
     f78:	5e e3       	ldi	r21, 0x3E	; 62
     f7a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f7e:	dc 01       	movw	r26, r24
     f80:	cb 01       	movw	r24, r22
     f82:	f8 01       	movw	r30, r16
     f84:	80 83       	st	Z, r24
     f86:	91 83       	std	Z+1, r25	; 0x01
     f88:	a2 83       	std	Z+2, r26	; 0x02
     f8a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f8c:	fe 01       	movw	r30, r28
     f8e:	e7 57       	subi	r30, 0x77	; 119
     f90:	ff 4f       	sbci	r31, 0xFF	; 255
     f92:	60 81       	ld	r22, Z
     f94:	71 81       	ldd	r23, Z+1	; 0x01
     f96:	82 81       	ldd	r24, Z+2	; 0x02
     f98:	93 81       	ldd	r25, Z+3	; 0x03
     f9a:	20 e0       	ldi	r18, 0x00	; 0
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	40 e8       	ldi	r20, 0x80	; 128
     fa0:	5f e3       	ldi	r21, 0x3F	; 63
     fa2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
     fa6:	88 23       	and	r24, r24
     fa8:	34 f4       	brge	.+12     	; 0xfb6 <main+0x156>
		__ticks = 1;
     faa:	fe 01       	movw	r30, r28
     fac:	e8 57       	subi	r30, 0x78	; 120
     fae:	ff 4f       	sbci	r31, 0xFF	; 255
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	80 83       	st	Z, r24
     fb4:	e0 c0       	rjmp	.+448    	; 0x1176 <main+0x316>
	else if (__tmp > 255)
     fb6:	fe 01       	movw	r30, r28
     fb8:	e7 57       	subi	r30, 0x77	; 119
     fba:	ff 4f       	sbci	r31, 0xFF	; 255
     fbc:	60 81       	ld	r22, Z
     fbe:	71 81       	ldd	r23, Z+1	; 0x01
     fc0:	82 81       	ldd	r24, Z+2	; 0x02
     fc2:	93 81       	ldd	r25, Z+3	; 0x03
     fc4:	20 e0       	ldi	r18, 0x00	; 0
     fc6:	30 e0       	ldi	r19, 0x00	; 0
     fc8:	4f e7       	ldi	r20, 0x7F	; 127
     fca:	53 e4       	ldi	r21, 0x43	; 67
     fcc:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
     fd0:	18 16       	cp	r1, r24
     fd2:	0c f0       	brlt	.+2      	; 0xfd6 <main+0x176>
     fd4:	c0 c0       	rjmp	.+384    	; 0x1156 <main+0x2f6>
	{
		_delay_ms(__us / 1000.0);
     fd6:	fe 01       	movw	r30, r28
     fd8:	e3 57       	subi	r30, 0x73	; 115
     fda:	ff 4f       	sbci	r31, 0xFF	; 255
     fdc:	60 81       	ld	r22, Z
     fde:	71 81       	ldd	r23, Z+1	; 0x01
     fe0:	82 81       	ldd	r24, Z+2	; 0x02
     fe2:	93 81       	ldd	r25, Z+3	; 0x03
     fe4:	20 e0       	ldi	r18, 0x00	; 0
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	4a e7       	ldi	r20, 0x7A	; 122
     fea:	54 e4       	ldi	r21, 0x44	; 68
     fec:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
     ff0:	dc 01       	movw	r26, r24
     ff2:	cb 01       	movw	r24, r22
     ff4:	fe 01       	movw	r30, r28
     ff6:	ec 57       	subi	r30, 0x7C	; 124
     ff8:	ff 4f       	sbci	r31, 0xFF	; 255
     ffa:	80 83       	st	Z, r24
     ffc:	91 83       	std	Z+1, r25	; 0x01
     ffe:	a2 83       	std	Z+2, r26	; 0x02
    1000:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1002:	8e 01       	movw	r16, r28
    1004:	00 58       	subi	r16, 0x80	; 128
    1006:	1f 4f       	sbci	r17, 0xFF	; 255
    1008:	fe 01       	movw	r30, r28
    100a:	ec 57       	subi	r30, 0x7C	; 124
    100c:	ff 4f       	sbci	r31, 0xFF	; 255
    100e:	60 81       	ld	r22, Z
    1010:	71 81       	ldd	r23, Z+1	; 0x01
    1012:	82 81       	ldd	r24, Z+2	; 0x02
    1014:	93 81       	ldd	r25, Z+3	; 0x03
    1016:	20 e0       	ldi	r18, 0x00	; 0
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	4a e7       	ldi	r20, 0x7A	; 122
    101c:	53 e4       	ldi	r21, 0x43	; 67
    101e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1022:	dc 01       	movw	r26, r24
    1024:	cb 01       	movw	r24, r22
    1026:	f8 01       	movw	r30, r16
    1028:	80 83       	st	Z, r24
    102a:	91 83       	std	Z+1, r25	; 0x01
    102c:	a2 83       	std	Z+2, r26	; 0x02
    102e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1030:	fe 01       	movw	r30, r28
    1032:	e0 58       	subi	r30, 0x80	; 128
    1034:	ff 4f       	sbci	r31, 0xFF	; 255
    1036:	60 81       	ld	r22, Z
    1038:	71 81       	ldd	r23, Z+1	; 0x01
    103a:	82 81       	ldd	r24, Z+2	; 0x02
    103c:	93 81       	ldd	r25, Z+3	; 0x03
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	40 e8       	ldi	r20, 0x80	; 128
    1044:	5f e3       	ldi	r21, 0x3F	; 63
    1046:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    104a:	88 23       	and	r24, r24
    104c:	44 f4       	brge	.+16     	; 0x105e <main+0x1fe>
		__ticks = 1;
    104e:	fe 01       	movw	r30, r28
    1050:	e2 58       	subi	r30, 0x82	; 130
    1052:	ff 4f       	sbci	r31, 0xFF	; 255
    1054:	81 e0       	ldi	r24, 0x01	; 1
    1056:	90 e0       	ldi	r25, 0x00	; 0
    1058:	91 83       	std	Z+1, r25	; 0x01
    105a:	80 83       	st	Z, r24
    105c:	64 c0       	rjmp	.+200    	; 0x1126 <main+0x2c6>
	else if (__tmp > 65535)
    105e:	fe 01       	movw	r30, r28
    1060:	e0 58       	subi	r30, 0x80	; 128
    1062:	ff 4f       	sbci	r31, 0xFF	; 255
    1064:	60 81       	ld	r22, Z
    1066:	71 81       	ldd	r23, Z+1	; 0x01
    1068:	82 81       	ldd	r24, Z+2	; 0x02
    106a:	93 81       	ldd	r25, Z+3	; 0x03
    106c:	20 e0       	ldi	r18, 0x00	; 0
    106e:	3f ef       	ldi	r19, 0xFF	; 255
    1070:	4f e7       	ldi	r20, 0x7F	; 127
    1072:	57 e4       	ldi	r21, 0x47	; 71
    1074:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1078:	18 16       	cp	r1, r24
    107a:	0c f0       	brlt	.+2      	; 0x107e <main+0x21e>
    107c:	43 c0       	rjmp	.+134    	; 0x1104 <main+0x2a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    107e:	fe 01       	movw	r30, r28
    1080:	ec 57       	subi	r30, 0x7C	; 124
    1082:	ff 4f       	sbci	r31, 0xFF	; 255
    1084:	60 81       	ld	r22, Z
    1086:	71 81       	ldd	r23, Z+1	; 0x01
    1088:	82 81       	ldd	r24, Z+2	; 0x02
    108a:	93 81       	ldd	r25, Z+3	; 0x03
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	40 e2       	ldi	r20, 0x20	; 32
    1092:	51 e4       	ldi	r21, 0x41	; 65
    1094:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1098:	dc 01       	movw	r26, r24
    109a:	cb 01       	movw	r24, r22
    109c:	8e 01       	movw	r16, r28
    109e:	02 58       	subi	r16, 0x82	; 130
    10a0:	1f 4f       	sbci	r17, 0xFF	; 255
    10a2:	bc 01       	movw	r22, r24
    10a4:	cd 01       	movw	r24, r26
    10a6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    10aa:	dc 01       	movw	r26, r24
    10ac:	cb 01       	movw	r24, r22
    10ae:	f8 01       	movw	r30, r16
    10b0:	91 83       	std	Z+1, r25	; 0x01
    10b2:	80 83       	st	Z, r24
    10b4:	1f c0       	rjmp	.+62     	; 0x10f4 <main+0x294>
    10b6:	fe 01       	movw	r30, r28
    10b8:	e4 58       	subi	r30, 0x84	; 132
    10ba:	ff 4f       	sbci	r31, 0xFF	; 255
    10bc:	89 e1       	ldi	r24, 0x19	; 25
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	91 83       	std	Z+1, r25	; 0x01
    10c2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    10c4:	fe 01       	movw	r30, r28
    10c6:	e4 58       	subi	r30, 0x84	; 132
    10c8:	ff 4f       	sbci	r31, 0xFF	; 255
    10ca:	80 81       	ld	r24, Z
    10cc:	91 81       	ldd	r25, Z+1	; 0x01
    10ce:	01 97       	sbiw	r24, 0x01	; 1
    10d0:	f1 f7       	brne	.-4      	; 0x10ce <main+0x26e>
    10d2:	fe 01       	movw	r30, r28
    10d4:	e4 58       	subi	r30, 0x84	; 132
    10d6:	ff 4f       	sbci	r31, 0xFF	; 255
    10d8:	91 83       	std	Z+1, r25	; 0x01
    10da:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10dc:	de 01       	movw	r26, r28
    10de:	a2 58       	subi	r26, 0x82	; 130
    10e0:	bf 4f       	sbci	r27, 0xFF	; 255
    10e2:	fe 01       	movw	r30, r28
    10e4:	e2 58       	subi	r30, 0x82	; 130
    10e6:	ff 4f       	sbci	r31, 0xFF	; 255
    10e8:	80 81       	ld	r24, Z
    10ea:	91 81       	ldd	r25, Z+1	; 0x01
    10ec:	01 97       	sbiw	r24, 0x01	; 1
    10ee:	11 96       	adiw	r26, 0x01	; 1
    10f0:	9c 93       	st	X, r25
    10f2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10f4:	fe 01       	movw	r30, r28
    10f6:	e2 58       	subi	r30, 0x82	; 130
    10f8:	ff 4f       	sbci	r31, 0xFF	; 255
    10fa:	80 81       	ld	r24, Z
    10fc:	91 81       	ldd	r25, Z+1	; 0x01
    10fe:	00 97       	sbiw	r24, 0x00	; 0
    1100:	d1 f6       	brne	.-76     	; 0x10b6 <main+0x256>
    1102:	4b c0       	rjmp	.+150    	; 0x119a <main+0x33a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1104:	8e 01       	movw	r16, r28
    1106:	02 58       	subi	r16, 0x82	; 130
    1108:	1f 4f       	sbci	r17, 0xFF	; 255
    110a:	fe 01       	movw	r30, r28
    110c:	e0 58       	subi	r30, 0x80	; 128
    110e:	ff 4f       	sbci	r31, 0xFF	; 255
    1110:	60 81       	ld	r22, Z
    1112:	71 81       	ldd	r23, Z+1	; 0x01
    1114:	82 81       	ldd	r24, Z+2	; 0x02
    1116:	93 81       	ldd	r25, Z+3	; 0x03
    1118:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    111c:	dc 01       	movw	r26, r24
    111e:	cb 01       	movw	r24, r22
    1120:	f8 01       	movw	r30, r16
    1122:	91 83       	std	Z+1, r25	; 0x01
    1124:	80 83       	st	Z, r24
    1126:	de 01       	movw	r26, r28
    1128:	a6 58       	subi	r26, 0x86	; 134
    112a:	bf 4f       	sbci	r27, 0xFF	; 255
    112c:	fe 01       	movw	r30, r28
    112e:	e2 58       	subi	r30, 0x82	; 130
    1130:	ff 4f       	sbci	r31, 0xFF	; 255
    1132:	80 81       	ld	r24, Z
    1134:	91 81       	ldd	r25, Z+1	; 0x01
    1136:	11 96       	adiw	r26, 0x01	; 1
    1138:	9c 93       	st	X, r25
    113a:	8e 93       	st	-X, r24
    113c:	fe 01       	movw	r30, r28
    113e:	e6 58       	subi	r30, 0x86	; 134
    1140:	ff 4f       	sbci	r31, 0xFF	; 255
    1142:	80 81       	ld	r24, Z
    1144:	91 81       	ldd	r25, Z+1	; 0x01
    1146:	01 97       	sbiw	r24, 0x01	; 1
    1148:	f1 f7       	brne	.-4      	; 0x1146 <main+0x2e6>
    114a:	fe 01       	movw	r30, r28
    114c:	e6 58       	subi	r30, 0x86	; 134
    114e:	ff 4f       	sbci	r31, 0xFF	; 255
    1150:	91 83       	std	Z+1, r25	; 0x01
    1152:	80 83       	st	Z, r24
    1154:	22 c0       	rjmp	.+68     	; 0x119a <main+0x33a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1156:	8e 01       	movw	r16, r28
    1158:	08 57       	subi	r16, 0x78	; 120
    115a:	1f 4f       	sbci	r17, 0xFF	; 255
    115c:	fe 01       	movw	r30, r28
    115e:	e7 57       	subi	r30, 0x77	; 119
    1160:	ff 4f       	sbci	r31, 0xFF	; 255
    1162:	60 81       	ld	r22, Z
    1164:	71 81       	ldd	r23, Z+1	; 0x01
    1166:	82 81       	ldd	r24, Z+2	; 0x02
    1168:	93 81       	ldd	r25, Z+3	; 0x03
    116a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    116e:	dc 01       	movw	r26, r24
    1170:	cb 01       	movw	r24, r22
    1172:	f8 01       	movw	r30, r16
    1174:	80 83       	st	Z, r24
    1176:	de 01       	movw	r26, r28
    1178:	a7 58       	subi	r26, 0x87	; 135
    117a:	bf 4f       	sbci	r27, 0xFF	; 255
    117c:	fe 01       	movw	r30, r28
    117e:	e8 57       	subi	r30, 0x78	; 120
    1180:	ff 4f       	sbci	r31, 0xFF	; 255
    1182:	80 81       	ld	r24, Z
    1184:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1186:	fe 01       	movw	r30, r28
    1188:	e7 58       	subi	r30, 0x87	; 135
    118a:	ff 4f       	sbci	r31, 0xFF	; 255
    118c:	80 81       	ld	r24, Z
    118e:	8a 95       	dec	r24
    1190:	f1 f7       	brne	.-4      	; 0x118e <main+0x32e>
    1192:	fe 01       	movw	r30, r28
    1194:	e7 58       	subi	r30, 0x87	; 135
    1196:	ff 4f       	sbci	r31, 0xFF	; 255
    1198:	80 83       	st	Z, r24
		_delay_us(10);
		PORTA &=0xC0;//disable initialized PORTA pins
    119a:	ab e3       	ldi	r26, 0x3B	; 59
    119c:	b0 e0       	ldi	r27, 0x00	; 0
    119e:	eb e3       	ldi	r30, 0x3B	; 59
    11a0:	f0 e0       	ldi	r31, 0x00	; 0
    11a2:	80 81       	ld	r24, Z
    11a4:	80 7c       	andi	r24, 0xC0	; 192
    11a6:	8c 93       	st	X, r24
    	PORTC =(PORTC&0xF0)|(seconds/10);//display second 2
    11a8:	a5 e3       	ldi	r26, 0x35	; 53
    11aa:	b0 e0       	ldi	r27, 0x00	; 0
    11ac:	e5 e3       	ldi	r30, 0x35	; 53
    11ae:	f0 e0       	ldi	r31, 0x00	; 0
    11b0:	80 81       	ld	r24, Z
    11b2:	28 2f       	mov	r18, r24
    11b4:	20 7f       	andi	r18, 0xF0	; 240
    11b6:	80 91 68 00 	lds	r24, 0x0068
    11ba:	9a e0       	ldi	r25, 0x0A	; 10
    11bc:	69 2f       	mov	r22, r25
    11be:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <__udivmodqi4>
    11c2:	82 2b       	or	r24, r18
    11c4:	8c 93       	st	X, r24
    	PORTA |= 0x10;//enable PA4 for second 2
    11c6:	ab e3       	ldi	r26, 0x3B	; 59
    11c8:	b0 e0       	ldi	r27, 0x00	; 0
    11ca:	eb e3       	ldi	r30, 0x3B	; 59
    11cc:	f0 e0       	ldi	r31, 0x00	; 0
    11ce:	80 81       	ld	r24, Z
    11d0:	80 61       	ori	r24, 0x10	; 16
    11d2:	8c 93       	st	X, r24
    11d4:	fe 01       	movw	r30, r28
    11d6:	eb 58       	subi	r30, 0x8B	; 139
    11d8:	ff 4f       	sbci	r31, 0xFF	; 255
    11da:	80 e0       	ldi	r24, 0x00	; 0
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	a0 e2       	ldi	r26, 0x20	; 32
    11e0:	b1 e4       	ldi	r27, 0x41	; 65
    11e2:	80 83       	st	Z, r24
    11e4:	91 83       	std	Z+1, r25	; 0x01
    11e6:	a2 83       	std	Z+2, r26	; 0x02
    11e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    11ea:	8e 01       	movw	r16, r28
    11ec:	0f 58       	subi	r16, 0x8F	; 143
    11ee:	1f 4f       	sbci	r17, 0xFF	; 255
    11f0:	fe 01       	movw	r30, r28
    11f2:	eb 58       	subi	r30, 0x8B	; 139
    11f4:	ff 4f       	sbci	r31, 0xFF	; 255
    11f6:	60 81       	ld	r22, Z
    11f8:	71 81       	ldd	r23, Z+1	; 0x01
    11fa:	82 81       	ldd	r24, Z+2	; 0x02
    11fc:	93 81       	ldd	r25, Z+3	; 0x03
    11fe:	2b ea       	ldi	r18, 0xAB	; 171
    1200:	3a ea       	ldi	r19, 0xAA	; 170
    1202:	4a ea       	ldi	r20, 0xAA	; 170
    1204:	5e e3       	ldi	r21, 0x3E	; 62
    1206:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    120a:	dc 01       	movw	r26, r24
    120c:	cb 01       	movw	r24, r22
    120e:	f8 01       	movw	r30, r16
    1210:	80 83       	st	Z, r24
    1212:	91 83       	std	Z+1, r25	; 0x01
    1214:	a2 83       	std	Z+2, r26	; 0x02
    1216:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1218:	fe 01       	movw	r30, r28
    121a:	ef 58       	subi	r30, 0x8F	; 143
    121c:	ff 4f       	sbci	r31, 0xFF	; 255
    121e:	60 81       	ld	r22, Z
    1220:	71 81       	ldd	r23, Z+1	; 0x01
    1222:	82 81       	ldd	r24, Z+2	; 0x02
    1224:	93 81       	ldd	r25, Z+3	; 0x03
    1226:	20 e0       	ldi	r18, 0x00	; 0
    1228:	30 e0       	ldi	r19, 0x00	; 0
    122a:	40 e8       	ldi	r20, 0x80	; 128
    122c:	5f e3       	ldi	r21, 0x3F	; 63
    122e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1232:	88 23       	and	r24, r24
    1234:	34 f4       	brge	.+12     	; 0x1242 <main+0x3e2>
		__ticks = 1;
    1236:	fe 01       	movw	r30, r28
    1238:	e0 59       	subi	r30, 0x90	; 144
    123a:	ff 4f       	sbci	r31, 0xFF	; 255
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	80 83       	st	Z, r24
    1240:	e0 c0       	rjmp	.+448    	; 0x1402 <main+0x5a2>
	else if (__tmp > 255)
    1242:	fe 01       	movw	r30, r28
    1244:	ef 58       	subi	r30, 0x8F	; 143
    1246:	ff 4f       	sbci	r31, 0xFF	; 255
    1248:	60 81       	ld	r22, Z
    124a:	71 81       	ldd	r23, Z+1	; 0x01
    124c:	82 81       	ldd	r24, Z+2	; 0x02
    124e:	93 81       	ldd	r25, Z+3	; 0x03
    1250:	20 e0       	ldi	r18, 0x00	; 0
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	4f e7       	ldi	r20, 0x7F	; 127
    1256:	53 e4       	ldi	r21, 0x43	; 67
    1258:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    125c:	18 16       	cp	r1, r24
    125e:	0c f0       	brlt	.+2      	; 0x1262 <main+0x402>
    1260:	c0 c0       	rjmp	.+384    	; 0x13e2 <main+0x582>
	{
		_delay_ms(__us / 1000.0);
    1262:	fe 01       	movw	r30, r28
    1264:	eb 58       	subi	r30, 0x8B	; 139
    1266:	ff 4f       	sbci	r31, 0xFF	; 255
    1268:	60 81       	ld	r22, Z
    126a:	71 81       	ldd	r23, Z+1	; 0x01
    126c:	82 81       	ldd	r24, Z+2	; 0x02
    126e:	93 81       	ldd	r25, Z+3	; 0x03
    1270:	20 e0       	ldi	r18, 0x00	; 0
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	4a e7       	ldi	r20, 0x7A	; 122
    1276:	54 e4       	ldi	r21, 0x44	; 68
    1278:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    127c:	dc 01       	movw	r26, r24
    127e:	cb 01       	movw	r24, r22
    1280:	fe 01       	movw	r30, r28
    1282:	e4 59       	subi	r30, 0x94	; 148
    1284:	ff 4f       	sbci	r31, 0xFF	; 255
    1286:	80 83       	st	Z, r24
    1288:	91 83       	std	Z+1, r25	; 0x01
    128a:	a2 83       	std	Z+2, r26	; 0x02
    128c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    128e:	8e 01       	movw	r16, r28
    1290:	08 59       	subi	r16, 0x98	; 152
    1292:	1f 4f       	sbci	r17, 0xFF	; 255
    1294:	fe 01       	movw	r30, r28
    1296:	e4 59       	subi	r30, 0x94	; 148
    1298:	ff 4f       	sbci	r31, 0xFF	; 255
    129a:	60 81       	ld	r22, Z
    129c:	71 81       	ldd	r23, Z+1	; 0x01
    129e:	82 81       	ldd	r24, Z+2	; 0x02
    12a0:	93 81       	ldd	r25, Z+3	; 0x03
    12a2:	20 e0       	ldi	r18, 0x00	; 0
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	4a e7       	ldi	r20, 0x7A	; 122
    12a8:	53 e4       	ldi	r21, 0x43	; 67
    12aa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12ae:	dc 01       	movw	r26, r24
    12b0:	cb 01       	movw	r24, r22
    12b2:	f8 01       	movw	r30, r16
    12b4:	80 83       	st	Z, r24
    12b6:	91 83       	std	Z+1, r25	; 0x01
    12b8:	a2 83       	std	Z+2, r26	; 0x02
    12ba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12bc:	fe 01       	movw	r30, r28
    12be:	e8 59       	subi	r30, 0x98	; 152
    12c0:	ff 4f       	sbci	r31, 0xFF	; 255
    12c2:	60 81       	ld	r22, Z
    12c4:	71 81       	ldd	r23, Z+1	; 0x01
    12c6:	82 81       	ldd	r24, Z+2	; 0x02
    12c8:	93 81       	ldd	r25, Z+3	; 0x03
    12ca:	20 e0       	ldi	r18, 0x00	; 0
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	40 e8       	ldi	r20, 0x80	; 128
    12d0:	5f e3       	ldi	r21, 0x3F	; 63
    12d2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    12d6:	88 23       	and	r24, r24
    12d8:	44 f4       	brge	.+16     	; 0x12ea <main+0x48a>
		__ticks = 1;
    12da:	fe 01       	movw	r30, r28
    12dc:	ea 59       	subi	r30, 0x9A	; 154
    12de:	ff 4f       	sbci	r31, 0xFF	; 255
    12e0:	81 e0       	ldi	r24, 0x01	; 1
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	91 83       	std	Z+1, r25	; 0x01
    12e6:	80 83       	st	Z, r24
    12e8:	64 c0       	rjmp	.+200    	; 0x13b2 <main+0x552>
	else if (__tmp > 65535)
    12ea:	fe 01       	movw	r30, r28
    12ec:	e8 59       	subi	r30, 0x98	; 152
    12ee:	ff 4f       	sbci	r31, 0xFF	; 255
    12f0:	60 81       	ld	r22, Z
    12f2:	71 81       	ldd	r23, Z+1	; 0x01
    12f4:	82 81       	ldd	r24, Z+2	; 0x02
    12f6:	93 81       	ldd	r25, Z+3	; 0x03
    12f8:	20 e0       	ldi	r18, 0x00	; 0
    12fa:	3f ef       	ldi	r19, 0xFF	; 255
    12fc:	4f e7       	ldi	r20, 0x7F	; 127
    12fe:	57 e4       	ldi	r21, 0x47	; 71
    1300:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1304:	18 16       	cp	r1, r24
    1306:	0c f0       	brlt	.+2      	; 0x130a <main+0x4aa>
    1308:	43 c0       	rjmp	.+134    	; 0x1390 <main+0x530>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    130a:	fe 01       	movw	r30, r28
    130c:	e4 59       	subi	r30, 0x94	; 148
    130e:	ff 4f       	sbci	r31, 0xFF	; 255
    1310:	60 81       	ld	r22, Z
    1312:	71 81       	ldd	r23, Z+1	; 0x01
    1314:	82 81       	ldd	r24, Z+2	; 0x02
    1316:	93 81       	ldd	r25, Z+3	; 0x03
    1318:	20 e0       	ldi	r18, 0x00	; 0
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	40 e2       	ldi	r20, 0x20	; 32
    131e:	51 e4       	ldi	r21, 0x41	; 65
    1320:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1324:	dc 01       	movw	r26, r24
    1326:	cb 01       	movw	r24, r22
    1328:	8e 01       	movw	r16, r28
    132a:	0a 59       	subi	r16, 0x9A	; 154
    132c:	1f 4f       	sbci	r17, 0xFF	; 255
    132e:	bc 01       	movw	r22, r24
    1330:	cd 01       	movw	r24, r26
    1332:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1336:	dc 01       	movw	r26, r24
    1338:	cb 01       	movw	r24, r22
    133a:	f8 01       	movw	r30, r16
    133c:	91 83       	std	Z+1, r25	; 0x01
    133e:	80 83       	st	Z, r24
    1340:	1f c0       	rjmp	.+62     	; 0x1380 <main+0x520>
    1342:	fe 01       	movw	r30, r28
    1344:	ec 59       	subi	r30, 0x9C	; 156
    1346:	ff 4f       	sbci	r31, 0xFF	; 255
    1348:	89 e1       	ldi	r24, 0x19	; 25
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	91 83       	std	Z+1, r25	; 0x01
    134e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1350:	fe 01       	movw	r30, r28
    1352:	ec 59       	subi	r30, 0x9C	; 156
    1354:	ff 4f       	sbci	r31, 0xFF	; 255
    1356:	80 81       	ld	r24, Z
    1358:	91 81       	ldd	r25, Z+1	; 0x01
    135a:	01 97       	sbiw	r24, 0x01	; 1
    135c:	f1 f7       	brne	.-4      	; 0x135a <main+0x4fa>
    135e:	fe 01       	movw	r30, r28
    1360:	ec 59       	subi	r30, 0x9C	; 156
    1362:	ff 4f       	sbci	r31, 0xFF	; 255
    1364:	91 83       	std	Z+1, r25	; 0x01
    1366:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1368:	de 01       	movw	r26, r28
    136a:	aa 59       	subi	r26, 0x9A	; 154
    136c:	bf 4f       	sbci	r27, 0xFF	; 255
    136e:	fe 01       	movw	r30, r28
    1370:	ea 59       	subi	r30, 0x9A	; 154
    1372:	ff 4f       	sbci	r31, 0xFF	; 255
    1374:	80 81       	ld	r24, Z
    1376:	91 81       	ldd	r25, Z+1	; 0x01
    1378:	01 97       	sbiw	r24, 0x01	; 1
    137a:	11 96       	adiw	r26, 0x01	; 1
    137c:	9c 93       	st	X, r25
    137e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1380:	fe 01       	movw	r30, r28
    1382:	ea 59       	subi	r30, 0x9A	; 154
    1384:	ff 4f       	sbci	r31, 0xFF	; 255
    1386:	80 81       	ld	r24, Z
    1388:	91 81       	ldd	r25, Z+1	; 0x01
    138a:	00 97       	sbiw	r24, 0x00	; 0
    138c:	d1 f6       	brne	.-76     	; 0x1342 <main+0x4e2>
    138e:	4b c0       	rjmp	.+150    	; 0x1426 <main+0x5c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1390:	8e 01       	movw	r16, r28
    1392:	0a 59       	subi	r16, 0x9A	; 154
    1394:	1f 4f       	sbci	r17, 0xFF	; 255
    1396:	fe 01       	movw	r30, r28
    1398:	e8 59       	subi	r30, 0x98	; 152
    139a:	ff 4f       	sbci	r31, 0xFF	; 255
    139c:	60 81       	ld	r22, Z
    139e:	71 81       	ldd	r23, Z+1	; 0x01
    13a0:	82 81       	ldd	r24, Z+2	; 0x02
    13a2:	93 81       	ldd	r25, Z+3	; 0x03
    13a4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13a8:	dc 01       	movw	r26, r24
    13aa:	cb 01       	movw	r24, r22
    13ac:	f8 01       	movw	r30, r16
    13ae:	91 83       	std	Z+1, r25	; 0x01
    13b0:	80 83       	st	Z, r24
    13b2:	de 01       	movw	r26, r28
    13b4:	ae 59       	subi	r26, 0x9E	; 158
    13b6:	bf 4f       	sbci	r27, 0xFF	; 255
    13b8:	fe 01       	movw	r30, r28
    13ba:	ea 59       	subi	r30, 0x9A	; 154
    13bc:	ff 4f       	sbci	r31, 0xFF	; 255
    13be:	80 81       	ld	r24, Z
    13c0:	91 81       	ldd	r25, Z+1	; 0x01
    13c2:	11 96       	adiw	r26, 0x01	; 1
    13c4:	9c 93       	st	X, r25
    13c6:	8e 93       	st	-X, r24
    13c8:	fe 01       	movw	r30, r28
    13ca:	ee 59       	subi	r30, 0x9E	; 158
    13cc:	ff 4f       	sbci	r31, 0xFF	; 255
    13ce:	80 81       	ld	r24, Z
    13d0:	91 81       	ldd	r25, Z+1	; 0x01
    13d2:	01 97       	sbiw	r24, 0x01	; 1
    13d4:	f1 f7       	brne	.-4      	; 0x13d2 <main+0x572>
    13d6:	fe 01       	movw	r30, r28
    13d8:	ee 59       	subi	r30, 0x9E	; 158
    13da:	ff 4f       	sbci	r31, 0xFF	; 255
    13dc:	91 83       	std	Z+1, r25	; 0x01
    13de:	80 83       	st	Z, r24
    13e0:	22 c0       	rjmp	.+68     	; 0x1426 <main+0x5c6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    13e2:	8e 01       	movw	r16, r28
    13e4:	00 59       	subi	r16, 0x90	; 144
    13e6:	1f 4f       	sbci	r17, 0xFF	; 255
    13e8:	fe 01       	movw	r30, r28
    13ea:	ef 58       	subi	r30, 0x8F	; 143
    13ec:	ff 4f       	sbci	r31, 0xFF	; 255
    13ee:	60 81       	ld	r22, Z
    13f0:	71 81       	ldd	r23, Z+1	; 0x01
    13f2:	82 81       	ldd	r24, Z+2	; 0x02
    13f4:	93 81       	ldd	r25, Z+3	; 0x03
    13f6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13fa:	dc 01       	movw	r26, r24
    13fc:	cb 01       	movw	r24, r22
    13fe:	f8 01       	movw	r30, r16
    1400:	80 83       	st	Z, r24
    1402:	de 01       	movw	r26, r28
    1404:	af 59       	subi	r26, 0x9F	; 159
    1406:	bf 4f       	sbci	r27, 0xFF	; 255
    1408:	fe 01       	movw	r30, r28
    140a:	e0 59       	subi	r30, 0x90	; 144
    140c:	ff 4f       	sbci	r31, 0xFF	; 255
    140e:	80 81       	ld	r24, Z
    1410:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1412:	fe 01       	movw	r30, r28
    1414:	ef 59       	subi	r30, 0x9F	; 159
    1416:	ff 4f       	sbci	r31, 0xFF	; 255
    1418:	80 81       	ld	r24, Z
    141a:	8a 95       	dec	r24
    141c:	f1 f7       	brne	.-4      	; 0x141a <main+0x5ba>
    141e:	fe 01       	movw	r30, r28
    1420:	ef 59       	subi	r30, 0x9F	; 159
    1422:	ff 4f       	sbci	r31, 0xFF	; 255
    1424:	80 83       	st	Z, r24
    	_delay_us(10);
		PORTA &=0xC0;//disable initialized PORTA pins
    1426:	ab e3       	ldi	r26, 0x3B	; 59
    1428:	b0 e0       	ldi	r27, 0x00	; 0
    142a:	eb e3       	ldi	r30, 0x3B	; 59
    142c:	f0 e0       	ldi	r31, 0x00	; 0
    142e:	80 81       	ld	r24, Z
    1430:	80 7c       	andi	r24, 0xC0	; 192
    1432:	8c 93       	st	X, r24
    	PORTC =(PORTC&0xF0)|(minutes%10);//displaying minute 1
    1434:	a5 e3       	ldi	r26, 0x35	; 53
    1436:	b0 e0       	ldi	r27, 0x00	; 0
    1438:	e5 e3       	ldi	r30, 0x35	; 53
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	80 81       	ld	r24, Z
    143e:	28 2f       	mov	r18, r24
    1440:	20 7f       	andi	r18, 0xF0	; 240
    1442:	80 91 69 00 	lds	r24, 0x0069
    1446:	9a e0       	ldi	r25, 0x0A	; 10
    1448:	69 2f       	mov	r22, r25
    144a:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <__udivmodqi4>
    144e:	89 2f       	mov	r24, r25
    1450:	82 2b       	or	r24, r18
    1452:	8c 93       	st	X, r24
    	PORTA |=0x08;//enable PA3 for minute 1
    1454:	ab e3       	ldi	r26, 0x3B	; 59
    1456:	b0 e0       	ldi	r27, 0x00	; 0
    1458:	eb e3       	ldi	r30, 0x3B	; 59
    145a:	f0 e0       	ldi	r31, 0x00	; 0
    145c:	80 81       	ld	r24, Z
    145e:	88 60       	ori	r24, 0x08	; 8
    1460:	8c 93       	st	X, r24
    1462:	fe 01       	movw	r30, r28
    1464:	e3 5a       	subi	r30, 0xA3	; 163
    1466:	ff 4f       	sbci	r31, 0xFF	; 255
    1468:	80 e0       	ldi	r24, 0x00	; 0
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	a0 e2       	ldi	r26, 0x20	; 32
    146e:	b1 e4       	ldi	r27, 0x41	; 65
    1470:	80 83       	st	Z, r24
    1472:	91 83       	std	Z+1, r25	; 0x01
    1474:	a2 83       	std	Z+2, r26	; 0x02
    1476:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1478:	8e 01       	movw	r16, r28
    147a:	07 5a       	subi	r16, 0xA7	; 167
    147c:	1f 4f       	sbci	r17, 0xFF	; 255
    147e:	fe 01       	movw	r30, r28
    1480:	e3 5a       	subi	r30, 0xA3	; 163
    1482:	ff 4f       	sbci	r31, 0xFF	; 255
    1484:	60 81       	ld	r22, Z
    1486:	71 81       	ldd	r23, Z+1	; 0x01
    1488:	82 81       	ldd	r24, Z+2	; 0x02
    148a:	93 81       	ldd	r25, Z+3	; 0x03
    148c:	2b ea       	ldi	r18, 0xAB	; 171
    148e:	3a ea       	ldi	r19, 0xAA	; 170
    1490:	4a ea       	ldi	r20, 0xAA	; 170
    1492:	5e e3       	ldi	r21, 0x3E	; 62
    1494:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1498:	dc 01       	movw	r26, r24
    149a:	cb 01       	movw	r24, r22
    149c:	f8 01       	movw	r30, r16
    149e:	80 83       	st	Z, r24
    14a0:	91 83       	std	Z+1, r25	; 0x01
    14a2:	a2 83       	std	Z+2, r26	; 0x02
    14a4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14a6:	fe 01       	movw	r30, r28
    14a8:	e7 5a       	subi	r30, 0xA7	; 167
    14aa:	ff 4f       	sbci	r31, 0xFF	; 255
    14ac:	60 81       	ld	r22, Z
    14ae:	71 81       	ldd	r23, Z+1	; 0x01
    14b0:	82 81       	ldd	r24, Z+2	; 0x02
    14b2:	93 81       	ldd	r25, Z+3	; 0x03
    14b4:	20 e0       	ldi	r18, 0x00	; 0
    14b6:	30 e0       	ldi	r19, 0x00	; 0
    14b8:	40 e8       	ldi	r20, 0x80	; 128
    14ba:	5f e3       	ldi	r21, 0x3F	; 63
    14bc:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    14c0:	88 23       	and	r24, r24
    14c2:	34 f4       	brge	.+12     	; 0x14d0 <main+0x670>
		__ticks = 1;
    14c4:	fe 01       	movw	r30, r28
    14c6:	e8 5a       	subi	r30, 0xA8	; 168
    14c8:	ff 4f       	sbci	r31, 0xFF	; 255
    14ca:	81 e0       	ldi	r24, 0x01	; 1
    14cc:	80 83       	st	Z, r24
    14ce:	e0 c0       	rjmp	.+448    	; 0x1690 <main+0x830>
	else if (__tmp > 255)
    14d0:	fe 01       	movw	r30, r28
    14d2:	e7 5a       	subi	r30, 0xA7	; 167
    14d4:	ff 4f       	sbci	r31, 0xFF	; 255
    14d6:	60 81       	ld	r22, Z
    14d8:	71 81       	ldd	r23, Z+1	; 0x01
    14da:	82 81       	ldd	r24, Z+2	; 0x02
    14dc:	93 81       	ldd	r25, Z+3	; 0x03
    14de:	20 e0       	ldi	r18, 0x00	; 0
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	4f e7       	ldi	r20, 0x7F	; 127
    14e4:	53 e4       	ldi	r21, 0x43	; 67
    14e6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    14ea:	18 16       	cp	r1, r24
    14ec:	0c f0       	brlt	.+2      	; 0x14f0 <main+0x690>
    14ee:	c0 c0       	rjmp	.+384    	; 0x1670 <main+0x810>
	{
		_delay_ms(__us / 1000.0);
    14f0:	fe 01       	movw	r30, r28
    14f2:	e3 5a       	subi	r30, 0xA3	; 163
    14f4:	ff 4f       	sbci	r31, 0xFF	; 255
    14f6:	60 81       	ld	r22, Z
    14f8:	71 81       	ldd	r23, Z+1	; 0x01
    14fa:	82 81       	ldd	r24, Z+2	; 0x02
    14fc:	93 81       	ldd	r25, Z+3	; 0x03
    14fe:	20 e0       	ldi	r18, 0x00	; 0
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	4a e7       	ldi	r20, 0x7A	; 122
    1504:	54 e4       	ldi	r21, 0x44	; 68
    1506:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    150a:	dc 01       	movw	r26, r24
    150c:	cb 01       	movw	r24, r22
    150e:	fe 01       	movw	r30, r28
    1510:	ec 5a       	subi	r30, 0xAC	; 172
    1512:	ff 4f       	sbci	r31, 0xFF	; 255
    1514:	80 83       	st	Z, r24
    1516:	91 83       	std	Z+1, r25	; 0x01
    1518:	a2 83       	std	Z+2, r26	; 0x02
    151a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    151c:	8e 01       	movw	r16, r28
    151e:	00 5b       	subi	r16, 0xB0	; 176
    1520:	1f 4f       	sbci	r17, 0xFF	; 255
    1522:	fe 01       	movw	r30, r28
    1524:	ec 5a       	subi	r30, 0xAC	; 172
    1526:	ff 4f       	sbci	r31, 0xFF	; 255
    1528:	60 81       	ld	r22, Z
    152a:	71 81       	ldd	r23, Z+1	; 0x01
    152c:	82 81       	ldd	r24, Z+2	; 0x02
    152e:	93 81       	ldd	r25, Z+3	; 0x03
    1530:	20 e0       	ldi	r18, 0x00	; 0
    1532:	30 e0       	ldi	r19, 0x00	; 0
    1534:	4a e7       	ldi	r20, 0x7A	; 122
    1536:	53 e4       	ldi	r21, 0x43	; 67
    1538:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    153c:	dc 01       	movw	r26, r24
    153e:	cb 01       	movw	r24, r22
    1540:	f8 01       	movw	r30, r16
    1542:	80 83       	st	Z, r24
    1544:	91 83       	std	Z+1, r25	; 0x01
    1546:	a2 83       	std	Z+2, r26	; 0x02
    1548:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    154a:	fe 01       	movw	r30, r28
    154c:	e0 5b       	subi	r30, 0xB0	; 176
    154e:	ff 4f       	sbci	r31, 0xFF	; 255
    1550:	60 81       	ld	r22, Z
    1552:	71 81       	ldd	r23, Z+1	; 0x01
    1554:	82 81       	ldd	r24, Z+2	; 0x02
    1556:	93 81       	ldd	r25, Z+3	; 0x03
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	40 e8       	ldi	r20, 0x80	; 128
    155e:	5f e3       	ldi	r21, 0x3F	; 63
    1560:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1564:	88 23       	and	r24, r24
    1566:	44 f4       	brge	.+16     	; 0x1578 <main+0x718>
		__ticks = 1;
    1568:	fe 01       	movw	r30, r28
    156a:	e2 5b       	subi	r30, 0xB2	; 178
    156c:	ff 4f       	sbci	r31, 0xFF	; 255
    156e:	81 e0       	ldi	r24, 0x01	; 1
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	91 83       	std	Z+1, r25	; 0x01
    1574:	80 83       	st	Z, r24
    1576:	64 c0       	rjmp	.+200    	; 0x1640 <main+0x7e0>
	else if (__tmp > 65535)
    1578:	fe 01       	movw	r30, r28
    157a:	e0 5b       	subi	r30, 0xB0	; 176
    157c:	ff 4f       	sbci	r31, 0xFF	; 255
    157e:	60 81       	ld	r22, Z
    1580:	71 81       	ldd	r23, Z+1	; 0x01
    1582:	82 81       	ldd	r24, Z+2	; 0x02
    1584:	93 81       	ldd	r25, Z+3	; 0x03
    1586:	20 e0       	ldi	r18, 0x00	; 0
    1588:	3f ef       	ldi	r19, 0xFF	; 255
    158a:	4f e7       	ldi	r20, 0x7F	; 127
    158c:	57 e4       	ldi	r21, 0x47	; 71
    158e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1592:	18 16       	cp	r1, r24
    1594:	0c f0       	brlt	.+2      	; 0x1598 <main+0x738>
    1596:	43 c0       	rjmp	.+134    	; 0x161e <main+0x7be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1598:	fe 01       	movw	r30, r28
    159a:	ec 5a       	subi	r30, 0xAC	; 172
    159c:	ff 4f       	sbci	r31, 0xFF	; 255
    159e:	60 81       	ld	r22, Z
    15a0:	71 81       	ldd	r23, Z+1	; 0x01
    15a2:	82 81       	ldd	r24, Z+2	; 0x02
    15a4:	93 81       	ldd	r25, Z+3	; 0x03
    15a6:	20 e0       	ldi	r18, 0x00	; 0
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	40 e2       	ldi	r20, 0x20	; 32
    15ac:	51 e4       	ldi	r21, 0x41	; 65
    15ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15b2:	dc 01       	movw	r26, r24
    15b4:	cb 01       	movw	r24, r22
    15b6:	8e 01       	movw	r16, r28
    15b8:	02 5b       	subi	r16, 0xB2	; 178
    15ba:	1f 4f       	sbci	r17, 0xFF	; 255
    15bc:	bc 01       	movw	r22, r24
    15be:	cd 01       	movw	r24, r26
    15c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15c4:	dc 01       	movw	r26, r24
    15c6:	cb 01       	movw	r24, r22
    15c8:	f8 01       	movw	r30, r16
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	80 83       	st	Z, r24
    15ce:	1f c0       	rjmp	.+62     	; 0x160e <main+0x7ae>
    15d0:	fe 01       	movw	r30, r28
    15d2:	e4 5b       	subi	r30, 0xB4	; 180
    15d4:	ff 4f       	sbci	r31, 0xFF	; 255
    15d6:	89 e1       	ldi	r24, 0x19	; 25
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	91 83       	std	Z+1, r25	; 0x01
    15dc:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    15de:	fe 01       	movw	r30, r28
    15e0:	e4 5b       	subi	r30, 0xB4	; 180
    15e2:	ff 4f       	sbci	r31, 0xFF	; 255
    15e4:	80 81       	ld	r24, Z
    15e6:	91 81       	ldd	r25, Z+1	; 0x01
    15e8:	01 97       	sbiw	r24, 0x01	; 1
    15ea:	f1 f7       	brne	.-4      	; 0x15e8 <main+0x788>
    15ec:	fe 01       	movw	r30, r28
    15ee:	e4 5b       	subi	r30, 0xB4	; 180
    15f0:	ff 4f       	sbci	r31, 0xFF	; 255
    15f2:	91 83       	std	Z+1, r25	; 0x01
    15f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15f6:	de 01       	movw	r26, r28
    15f8:	a2 5b       	subi	r26, 0xB2	; 178
    15fa:	bf 4f       	sbci	r27, 0xFF	; 255
    15fc:	fe 01       	movw	r30, r28
    15fe:	e2 5b       	subi	r30, 0xB2	; 178
    1600:	ff 4f       	sbci	r31, 0xFF	; 255
    1602:	80 81       	ld	r24, Z
    1604:	91 81       	ldd	r25, Z+1	; 0x01
    1606:	01 97       	sbiw	r24, 0x01	; 1
    1608:	11 96       	adiw	r26, 0x01	; 1
    160a:	9c 93       	st	X, r25
    160c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    160e:	fe 01       	movw	r30, r28
    1610:	e2 5b       	subi	r30, 0xB2	; 178
    1612:	ff 4f       	sbci	r31, 0xFF	; 255
    1614:	80 81       	ld	r24, Z
    1616:	91 81       	ldd	r25, Z+1	; 0x01
    1618:	00 97       	sbiw	r24, 0x00	; 0
    161a:	d1 f6       	brne	.-76     	; 0x15d0 <main+0x770>
    161c:	4b c0       	rjmp	.+150    	; 0x16b4 <main+0x854>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    161e:	8e 01       	movw	r16, r28
    1620:	02 5b       	subi	r16, 0xB2	; 178
    1622:	1f 4f       	sbci	r17, 0xFF	; 255
    1624:	fe 01       	movw	r30, r28
    1626:	e0 5b       	subi	r30, 0xB0	; 176
    1628:	ff 4f       	sbci	r31, 0xFF	; 255
    162a:	60 81       	ld	r22, Z
    162c:	71 81       	ldd	r23, Z+1	; 0x01
    162e:	82 81       	ldd	r24, Z+2	; 0x02
    1630:	93 81       	ldd	r25, Z+3	; 0x03
    1632:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1636:	dc 01       	movw	r26, r24
    1638:	cb 01       	movw	r24, r22
    163a:	f8 01       	movw	r30, r16
    163c:	91 83       	std	Z+1, r25	; 0x01
    163e:	80 83       	st	Z, r24
    1640:	de 01       	movw	r26, r28
    1642:	a6 5b       	subi	r26, 0xB6	; 182
    1644:	bf 4f       	sbci	r27, 0xFF	; 255
    1646:	fe 01       	movw	r30, r28
    1648:	e2 5b       	subi	r30, 0xB2	; 178
    164a:	ff 4f       	sbci	r31, 0xFF	; 255
    164c:	80 81       	ld	r24, Z
    164e:	91 81       	ldd	r25, Z+1	; 0x01
    1650:	11 96       	adiw	r26, 0x01	; 1
    1652:	9c 93       	st	X, r25
    1654:	8e 93       	st	-X, r24
    1656:	fe 01       	movw	r30, r28
    1658:	e6 5b       	subi	r30, 0xB6	; 182
    165a:	ff 4f       	sbci	r31, 0xFF	; 255
    165c:	80 81       	ld	r24, Z
    165e:	91 81       	ldd	r25, Z+1	; 0x01
    1660:	01 97       	sbiw	r24, 0x01	; 1
    1662:	f1 f7       	brne	.-4      	; 0x1660 <main+0x800>
    1664:	fe 01       	movw	r30, r28
    1666:	e6 5b       	subi	r30, 0xB6	; 182
    1668:	ff 4f       	sbci	r31, 0xFF	; 255
    166a:	91 83       	std	Z+1, r25	; 0x01
    166c:	80 83       	st	Z, r24
    166e:	22 c0       	rjmp	.+68     	; 0x16b4 <main+0x854>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1670:	8e 01       	movw	r16, r28
    1672:	08 5a       	subi	r16, 0xA8	; 168
    1674:	1f 4f       	sbci	r17, 0xFF	; 255
    1676:	fe 01       	movw	r30, r28
    1678:	e7 5a       	subi	r30, 0xA7	; 167
    167a:	ff 4f       	sbci	r31, 0xFF	; 255
    167c:	60 81       	ld	r22, Z
    167e:	71 81       	ldd	r23, Z+1	; 0x01
    1680:	82 81       	ldd	r24, Z+2	; 0x02
    1682:	93 81       	ldd	r25, Z+3	; 0x03
    1684:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1688:	dc 01       	movw	r26, r24
    168a:	cb 01       	movw	r24, r22
    168c:	f8 01       	movw	r30, r16
    168e:	80 83       	st	Z, r24
    1690:	de 01       	movw	r26, r28
    1692:	a7 5b       	subi	r26, 0xB7	; 183
    1694:	bf 4f       	sbci	r27, 0xFF	; 255
    1696:	fe 01       	movw	r30, r28
    1698:	e8 5a       	subi	r30, 0xA8	; 168
    169a:	ff 4f       	sbci	r31, 0xFF	; 255
    169c:	80 81       	ld	r24, Z
    169e:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    16a0:	fe 01       	movw	r30, r28
    16a2:	e7 5b       	subi	r30, 0xB7	; 183
    16a4:	ff 4f       	sbci	r31, 0xFF	; 255
    16a6:	80 81       	ld	r24, Z
    16a8:	8a 95       	dec	r24
    16aa:	f1 f7       	brne	.-4      	; 0x16a8 <main+0x848>
    16ac:	fe 01       	movw	r30, r28
    16ae:	e7 5b       	subi	r30, 0xB7	; 183
    16b0:	ff 4f       	sbci	r31, 0xFF	; 255
    16b2:	80 83       	st	Z, r24
    	_delay_us(10);
		PORTA &=0xC0;//disable initialized PORTA pins
    16b4:	ab e3       	ldi	r26, 0x3B	; 59
    16b6:	b0 e0       	ldi	r27, 0x00	; 0
    16b8:	eb e3       	ldi	r30, 0x3B	; 59
    16ba:	f0 e0       	ldi	r31, 0x00	; 0
    16bc:	80 81       	ld	r24, Z
    16be:	80 7c       	andi	r24, 0xC0	; 192
    16c0:	8c 93       	st	X, r24
    	PORTC =(PORTC&0xF0)|(minutes/10);//display minute 2
    16c2:	a5 e3       	ldi	r26, 0x35	; 53
    16c4:	b0 e0       	ldi	r27, 0x00	; 0
    16c6:	e5 e3       	ldi	r30, 0x35	; 53
    16c8:	f0 e0       	ldi	r31, 0x00	; 0
    16ca:	80 81       	ld	r24, Z
    16cc:	28 2f       	mov	r18, r24
    16ce:	20 7f       	andi	r18, 0xF0	; 240
    16d0:	80 91 69 00 	lds	r24, 0x0069
    16d4:	9a e0       	ldi	r25, 0x0A	; 10
    16d6:	69 2f       	mov	r22, r25
    16d8:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <__udivmodqi4>
    16dc:	82 2b       	or	r24, r18
    16de:	8c 93       	st	X, r24
    	PORTA |=0x04;//enable PA2 for minute 2
    16e0:	ab e3       	ldi	r26, 0x3B	; 59
    16e2:	b0 e0       	ldi	r27, 0x00	; 0
    16e4:	eb e3       	ldi	r30, 0x3B	; 59
    16e6:	f0 e0       	ldi	r31, 0x00	; 0
    16e8:	80 81       	ld	r24, Z
    16ea:	84 60       	ori	r24, 0x04	; 4
    16ec:	8c 93       	st	X, r24
    16ee:	fe 01       	movw	r30, r28
    16f0:	eb 5b       	subi	r30, 0xBB	; 187
    16f2:	ff 4f       	sbci	r31, 0xFF	; 255
    16f4:	80 e0       	ldi	r24, 0x00	; 0
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	a0 e2       	ldi	r26, 0x20	; 32
    16fa:	b1 e4       	ldi	r27, 0x41	; 65
    16fc:	80 83       	st	Z, r24
    16fe:	91 83       	std	Z+1, r25	; 0x01
    1700:	a2 83       	std	Z+2, r26	; 0x02
    1702:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1704:	8e 01       	movw	r16, r28
    1706:	0f 5b       	subi	r16, 0xBF	; 191
    1708:	1f 4f       	sbci	r17, 0xFF	; 255
    170a:	fe 01       	movw	r30, r28
    170c:	eb 5b       	subi	r30, 0xBB	; 187
    170e:	ff 4f       	sbci	r31, 0xFF	; 255
    1710:	60 81       	ld	r22, Z
    1712:	71 81       	ldd	r23, Z+1	; 0x01
    1714:	82 81       	ldd	r24, Z+2	; 0x02
    1716:	93 81       	ldd	r25, Z+3	; 0x03
    1718:	2b ea       	ldi	r18, 0xAB	; 171
    171a:	3a ea       	ldi	r19, 0xAA	; 170
    171c:	4a ea       	ldi	r20, 0xAA	; 170
    171e:	5e e3       	ldi	r21, 0x3E	; 62
    1720:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1724:	dc 01       	movw	r26, r24
    1726:	cb 01       	movw	r24, r22
    1728:	f8 01       	movw	r30, r16
    172a:	80 83       	st	Z, r24
    172c:	91 83       	std	Z+1, r25	; 0x01
    172e:	a2 83       	std	Z+2, r26	; 0x02
    1730:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1732:	fe 01       	movw	r30, r28
    1734:	ef 5b       	subi	r30, 0xBF	; 191
    1736:	ff 4f       	sbci	r31, 0xFF	; 255
    1738:	60 81       	ld	r22, Z
    173a:	71 81       	ldd	r23, Z+1	; 0x01
    173c:	82 81       	ldd	r24, Z+2	; 0x02
    173e:	93 81       	ldd	r25, Z+3	; 0x03
    1740:	20 e0       	ldi	r18, 0x00	; 0
    1742:	30 e0       	ldi	r19, 0x00	; 0
    1744:	40 e8       	ldi	r20, 0x80	; 128
    1746:	5f e3       	ldi	r21, 0x3F	; 63
    1748:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    174c:	88 23       	and	r24, r24
    174e:	34 f4       	brge	.+12     	; 0x175c <main+0x8fc>
		__ticks = 1;
    1750:	81 e0       	ldi	r24, 0x01	; 1
    1752:	fe 01       	movw	r30, r28
    1754:	e0 5c       	subi	r30, 0xC0	; 192
    1756:	ff 4f       	sbci	r31, 0xFF	; 255
    1758:	80 83       	st	Z, r24
    175a:	9d c0       	rjmp	.+314    	; 0x1896 <main+0xa36>
	else if (__tmp > 255)
    175c:	fe 01       	movw	r30, r28
    175e:	ef 5b       	subi	r30, 0xBF	; 191
    1760:	ff 4f       	sbci	r31, 0xFF	; 255
    1762:	60 81       	ld	r22, Z
    1764:	71 81       	ldd	r23, Z+1	; 0x01
    1766:	82 81       	ldd	r24, Z+2	; 0x02
    1768:	93 81       	ldd	r25, Z+3	; 0x03
    176a:	20 e0       	ldi	r18, 0x00	; 0
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	4f e7       	ldi	r20, 0x7F	; 127
    1770:	53 e4       	ldi	r21, 0x43	; 67
    1772:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1776:	18 16       	cp	r1, r24
    1778:	0c f0       	brlt	.+2      	; 0x177c <main+0x91c>
    177a:	7e c0       	rjmp	.+252    	; 0x1878 <main+0xa18>
	{
		_delay_ms(__us / 1000.0);
    177c:	fe 01       	movw	r30, r28
    177e:	eb 5b       	subi	r30, 0xBB	; 187
    1780:	ff 4f       	sbci	r31, 0xFF	; 255
    1782:	60 81       	ld	r22, Z
    1784:	71 81       	ldd	r23, Z+1	; 0x01
    1786:	82 81       	ldd	r24, Z+2	; 0x02
    1788:	93 81       	ldd	r25, Z+3	; 0x03
    178a:	20 e0       	ldi	r18, 0x00	; 0
    178c:	30 e0       	ldi	r19, 0x00	; 0
    178e:	4a e7       	ldi	r20, 0x7A	; 122
    1790:	54 e4       	ldi	r21, 0x44	; 68
    1792:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1796:	dc 01       	movw	r26, r24
    1798:	cb 01       	movw	r24, r22
    179a:	8c af       	std	Y+60, r24	; 0x3c
    179c:	9d af       	std	Y+61, r25	; 0x3d
    179e:	ae af       	std	Y+62, r26	; 0x3e
    17a0:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17a2:	6c ad       	ldd	r22, Y+60	; 0x3c
    17a4:	7d ad       	ldd	r23, Y+61	; 0x3d
    17a6:	8e ad       	ldd	r24, Y+62	; 0x3e
    17a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    17aa:	20 e0       	ldi	r18, 0x00	; 0
    17ac:	30 e0       	ldi	r19, 0x00	; 0
    17ae:	4a e7       	ldi	r20, 0x7A	; 122
    17b0:	53 e4       	ldi	r21, 0x43	; 67
    17b2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17b6:	dc 01       	movw	r26, r24
    17b8:	cb 01       	movw	r24, r22
    17ba:	88 af       	std	Y+56, r24	; 0x38
    17bc:	99 af       	std	Y+57, r25	; 0x39
    17be:	aa af       	std	Y+58, r26	; 0x3a
    17c0:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    17c2:	68 ad       	ldd	r22, Y+56	; 0x38
    17c4:	79 ad       	ldd	r23, Y+57	; 0x39
    17c6:	8a ad       	ldd	r24, Y+58	; 0x3a
    17c8:	9b ad       	ldd	r25, Y+59	; 0x3b
    17ca:	20 e0       	ldi	r18, 0x00	; 0
    17cc:	30 e0       	ldi	r19, 0x00	; 0
    17ce:	40 e8       	ldi	r20, 0x80	; 128
    17d0:	5f e3       	ldi	r21, 0x3F	; 63
    17d2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    17d6:	88 23       	and	r24, r24
    17d8:	2c f4       	brge	.+10     	; 0x17e4 <main+0x984>
		__ticks = 1;
    17da:	81 e0       	ldi	r24, 0x01	; 1
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	9f ab       	std	Y+55, r25	; 0x37
    17e0:	8e ab       	std	Y+54, r24	; 0x36
    17e2:	3f c0       	rjmp	.+126    	; 0x1862 <main+0xa02>
	else if (__tmp > 65535)
    17e4:	68 ad       	ldd	r22, Y+56	; 0x38
    17e6:	79 ad       	ldd	r23, Y+57	; 0x39
    17e8:	8a ad       	ldd	r24, Y+58	; 0x3a
    17ea:	9b ad       	ldd	r25, Y+59	; 0x3b
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	3f ef       	ldi	r19, 0xFF	; 255
    17f0:	4f e7       	ldi	r20, 0x7F	; 127
    17f2:	57 e4       	ldi	r21, 0x47	; 71
    17f4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    17f8:	18 16       	cp	r1, r24
    17fa:	4c f5       	brge	.+82     	; 0x184e <main+0x9ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17fc:	6c ad       	ldd	r22, Y+60	; 0x3c
    17fe:	7d ad       	ldd	r23, Y+61	; 0x3d
    1800:	8e ad       	ldd	r24, Y+62	; 0x3e
    1802:	9f ad       	ldd	r25, Y+63	; 0x3f
    1804:	20 e0       	ldi	r18, 0x00	; 0
    1806:	30 e0       	ldi	r19, 0x00	; 0
    1808:	40 e2       	ldi	r20, 0x20	; 32
    180a:	51 e4       	ldi	r21, 0x41	; 65
    180c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1810:	dc 01       	movw	r26, r24
    1812:	cb 01       	movw	r24, r22
    1814:	bc 01       	movw	r22, r24
    1816:	cd 01       	movw	r24, r26
    1818:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    181c:	dc 01       	movw	r26, r24
    181e:	cb 01       	movw	r24, r22
    1820:	9f ab       	std	Y+55, r25	; 0x37
    1822:	8e ab       	std	Y+54, r24	; 0x36
    1824:	0f c0       	rjmp	.+30     	; 0x1844 <main+0x9e4>
    1826:	89 e1       	ldi	r24, 0x19	; 25
    1828:	90 e0       	ldi	r25, 0x00	; 0
    182a:	9d ab       	std	Y+53, r25	; 0x35
    182c:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    182e:	8c a9       	ldd	r24, Y+52	; 0x34
    1830:	9d a9       	ldd	r25, Y+53	; 0x35
    1832:	01 97       	sbiw	r24, 0x01	; 1
    1834:	f1 f7       	brne	.-4      	; 0x1832 <main+0x9d2>
    1836:	9d ab       	std	Y+53, r25	; 0x35
    1838:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    183a:	8e a9       	ldd	r24, Y+54	; 0x36
    183c:	9f a9       	ldd	r25, Y+55	; 0x37
    183e:	01 97       	sbiw	r24, 0x01	; 1
    1840:	9f ab       	std	Y+55, r25	; 0x37
    1842:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1844:	8e a9       	ldd	r24, Y+54	; 0x36
    1846:	9f a9       	ldd	r25, Y+55	; 0x37
    1848:	00 97       	sbiw	r24, 0x00	; 0
    184a:	69 f7       	brne	.-38     	; 0x1826 <main+0x9c6>
    184c:	2d c0       	rjmp	.+90     	; 0x18a8 <main+0xa48>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    184e:	68 ad       	ldd	r22, Y+56	; 0x38
    1850:	79 ad       	ldd	r23, Y+57	; 0x39
    1852:	8a ad       	ldd	r24, Y+58	; 0x3a
    1854:	9b ad       	ldd	r25, Y+59	; 0x3b
    1856:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    185a:	dc 01       	movw	r26, r24
    185c:	cb 01       	movw	r24, r22
    185e:	9f ab       	std	Y+55, r25	; 0x37
    1860:	8e ab       	std	Y+54, r24	; 0x36
    1862:	8e a9       	ldd	r24, Y+54	; 0x36
    1864:	9f a9       	ldd	r25, Y+55	; 0x37
    1866:	9b ab       	std	Y+51, r25	; 0x33
    1868:	8a ab       	std	Y+50, r24	; 0x32
    186a:	8a a9       	ldd	r24, Y+50	; 0x32
    186c:	9b a9       	ldd	r25, Y+51	; 0x33
    186e:	01 97       	sbiw	r24, 0x01	; 1
    1870:	f1 f7       	brne	.-4      	; 0x186e <main+0xa0e>
    1872:	9b ab       	std	Y+51, r25	; 0x33
    1874:	8a ab       	std	Y+50, r24	; 0x32
    1876:	18 c0       	rjmp	.+48     	; 0x18a8 <main+0xa48>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1878:	fe 01       	movw	r30, r28
    187a:	ef 5b       	subi	r30, 0xBF	; 191
    187c:	ff 4f       	sbci	r31, 0xFF	; 255
    187e:	60 81       	ld	r22, Z
    1880:	71 81       	ldd	r23, Z+1	; 0x01
    1882:	82 81       	ldd	r24, Z+2	; 0x02
    1884:	93 81       	ldd	r25, Z+3	; 0x03
    1886:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    188a:	dc 01       	movw	r26, r24
    188c:	cb 01       	movw	r24, r22
    188e:	fe 01       	movw	r30, r28
    1890:	e0 5c       	subi	r30, 0xC0	; 192
    1892:	ff 4f       	sbci	r31, 0xFF	; 255
    1894:	80 83       	st	Z, r24
    1896:	fe 01       	movw	r30, r28
    1898:	e0 5c       	subi	r30, 0xC0	; 192
    189a:	ff 4f       	sbci	r31, 0xFF	; 255
    189c:	80 81       	ld	r24, Z
    189e:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    18a0:	89 a9       	ldd	r24, Y+49	; 0x31
    18a2:	8a 95       	dec	r24
    18a4:	f1 f7       	brne	.-4      	; 0x18a2 <main+0xa42>
    18a6:	89 ab       	std	Y+49, r24	; 0x31
    	_delay_us(10);
		PORTA &=0xC0;//disable initialized PORTA pins
    18a8:	ab e3       	ldi	r26, 0x3B	; 59
    18aa:	b0 e0       	ldi	r27, 0x00	; 0
    18ac:	eb e3       	ldi	r30, 0x3B	; 59
    18ae:	f0 e0       	ldi	r31, 0x00	; 0
    18b0:	80 81       	ld	r24, Z
    18b2:	80 7c       	andi	r24, 0xC0	; 192
    18b4:	8c 93       	st	X, r24
    	PORTC =(PORTC&0xF0)|(hours%10);//display hour 1
    18b6:	a5 e3       	ldi	r26, 0x35	; 53
    18b8:	b0 e0       	ldi	r27, 0x00	; 0
    18ba:	e5 e3       	ldi	r30, 0x35	; 53
    18bc:	f0 e0       	ldi	r31, 0x00	; 0
    18be:	80 81       	ld	r24, Z
    18c0:	28 2f       	mov	r18, r24
    18c2:	20 7f       	andi	r18, 0xF0	; 240
    18c4:	80 91 6a 00 	lds	r24, 0x006A
    18c8:	9a e0       	ldi	r25, 0x0A	; 10
    18ca:	69 2f       	mov	r22, r25
    18cc:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <__udivmodqi4>
    18d0:	89 2f       	mov	r24, r25
    18d2:	82 2b       	or	r24, r18
    18d4:	8c 93       	st	X, r24
    	PORTA |=0x02;//enable PA1 for hour 1
    18d6:	ab e3       	ldi	r26, 0x3B	; 59
    18d8:	b0 e0       	ldi	r27, 0x00	; 0
    18da:	eb e3       	ldi	r30, 0x3B	; 59
    18dc:	f0 e0       	ldi	r31, 0x00	; 0
    18de:	80 81       	ld	r24, Z
    18e0:	82 60       	ori	r24, 0x02	; 2
    18e2:	8c 93       	st	X, r24
    18e4:	80 e0       	ldi	r24, 0x00	; 0
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	a0 e2       	ldi	r26, 0x20	; 32
    18ea:	b1 e4       	ldi	r27, 0x41	; 65
    18ec:	8d a7       	std	Y+45, r24	; 0x2d
    18ee:	9e a7       	std	Y+46, r25	; 0x2e
    18f0:	af a7       	std	Y+47, r26	; 0x2f
    18f2:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    18f4:	6d a5       	ldd	r22, Y+45	; 0x2d
    18f6:	7e a5       	ldd	r23, Y+46	; 0x2e
    18f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    18fa:	98 a9       	ldd	r25, Y+48	; 0x30
    18fc:	2b ea       	ldi	r18, 0xAB	; 171
    18fe:	3a ea       	ldi	r19, 0xAA	; 170
    1900:	4a ea       	ldi	r20, 0xAA	; 170
    1902:	5e e3       	ldi	r21, 0x3E	; 62
    1904:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1908:	dc 01       	movw	r26, r24
    190a:	cb 01       	movw	r24, r22
    190c:	89 a7       	std	Y+41, r24	; 0x29
    190e:	9a a7       	std	Y+42, r25	; 0x2a
    1910:	ab a7       	std	Y+43, r26	; 0x2b
    1912:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    1914:	69 a5       	ldd	r22, Y+41	; 0x29
    1916:	7a a5       	ldd	r23, Y+42	; 0x2a
    1918:	8b a5       	ldd	r24, Y+43	; 0x2b
    191a:	9c a5       	ldd	r25, Y+44	; 0x2c
    191c:	20 e0       	ldi	r18, 0x00	; 0
    191e:	30 e0       	ldi	r19, 0x00	; 0
    1920:	40 e8       	ldi	r20, 0x80	; 128
    1922:	5f e3       	ldi	r21, 0x3F	; 63
    1924:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1928:	88 23       	and	r24, r24
    192a:	1c f4       	brge	.+6      	; 0x1932 <main+0xad2>
		__ticks = 1;
    192c:	81 e0       	ldi	r24, 0x01	; 1
    192e:	88 a7       	std	Y+40, r24	; 0x28
    1930:	91 c0       	rjmp	.+290    	; 0x1a54 <main+0xbf4>
	else if (__tmp > 255)
    1932:	69 a5       	ldd	r22, Y+41	; 0x29
    1934:	7a a5       	ldd	r23, Y+42	; 0x2a
    1936:	8b a5       	ldd	r24, Y+43	; 0x2b
    1938:	9c a5       	ldd	r25, Y+44	; 0x2c
    193a:	20 e0       	ldi	r18, 0x00	; 0
    193c:	30 e0       	ldi	r19, 0x00	; 0
    193e:	4f e7       	ldi	r20, 0x7F	; 127
    1940:	53 e4       	ldi	r21, 0x43	; 67
    1942:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1946:	18 16       	cp	r1, r24
    1948:	0c f0       	brlt	.+2      	; 0x194c <main+0xaec>
    194a:	7b c0       	rjmp	.+246    	; 0x1a42 <main+0xbe2>
	{
		_delay_ms(__us / 1000.0);
    194c:	6d a5       	ldd	r22, Y+45	; 0x2d
    194e:	7e a5       	ldd	r23, Y+46	; 0x2e
    1950:	8f a5       	ldd	r24, Y+47	; 0x2f
    1952:	98 a9       	ldd	r25, Y+48	; 0x30
    1954:	20 e0       	ldi	r18, 0x00	; 0
    1956:	30 e0       	ldi	r19, 0x00	; 0
    1958:	4a e7       	ldi	r20, 0x7A	; 122
    195a:	54 e4       	ldi	r21, 0x44	; 68
    195c:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1960:	dc 01       	movw	r26, r24
    1962:	cb 01       	movw	r24, r22
    1964:	8c a3       	std	Y+36, r24	; 0x24
    1966:	9d a3       	std	Y+37, r25	; 0x25
    1968:	ae a3       	std	Y+38, r26	; 0x26
    196a:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    196c:	6c a1       	ldd	r22, Y+36	; 0x24
    196e:	7d a1       	ldd	r23, Y+37	; 0x25
    1970:	8e a1       	ldd	r24, Y+38	; 0x26
    1972:	9f a1       	ldd	r25, Y+39	; 0x27
    1974:	20 e0       	ldi	r18, 0x00	; 0
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	4a e7       	ldi	r20, 0x7A	; 122
    197a:	53 e4       	ldi	r21, 0x43	; 67
    197c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1980:	dc 01       	movw	r26, r24
    1982:	cb 01       	movw	r24, r22
    1984:	88 a3       	std	Y+32, r24	; 0x20
    1986:	99 a3       	std	Y+33, r25	; 0x21
    1988:	aa a3       	std	Y+34, r26	; 0x22
    198a:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    198c:	68 a1       	ldd	r22, Y+32	; 0x20
    198e:	79 a1       	ldd	r23, Y+33	; 0x21
    1990:	8a a1       	ldd	r24, Y+34	; 0x22
    1992:	9b a1       	ldd	r25, Y+35	; 0x23
    1994:	20 e0       	ldi	r18, 0x00	; 0
    1996:	30 e0       	ldi	r19, 0x00	; 0
    1998:	40 e8       	ldi	r20, 0x80	; 128
    199a:	5f e3       	ldi	r21, 0x3F	; 63
    199c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    19a0:	88 23       	and	r24, r24
    19a2:	2c f4       	brge	.+10     	; 0x19ae <main+0xb4e>
		__ticks = 1;
    19a4:	81 e0       	ldi	r24, 0x01	; 1
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	9f 8f       	std	Y+31, r25	; 0x1f
    19aa:	8e 8f       	std	Y+30, r24	; 0x1e
    19ac:	3f c0       	rjmp	.+126    	; 0x1a2c <main+0xbcc>
	else if (__tmp > 65535)
    19ae:	68 a1       	ldd	r22, Y+32	; 0x20
    19b0:	79 a1       	ldd	r23, Y+33	; 0x21
    19b2:	8a a1       	ldd	r24, Y+34	; 0x22
    19b4:	9b a1       	ldd	r25, Y+35	; 0x23
    19b6:	20 e0       	ldi	r18, 0x00	; 0
    19b8:	3f ef       	ldi	r19, 0xFF	; 255
    19ba:	4f e7       	ldi	r20, 0x7F	; 127
    19bc:	57 e4       	ldi	r21, 0x47	; 71
    19be:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    19c2:	18 16       	cp	r1, r24
    19c4:	4c f5       	brge	.+82     	; 0x1a18 <main+0xbb8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19c6:	6c a1       	ldd	r22, Y+36	; 0x24
    19c8:	7d a1       	ldd	r23, Y+37	; 0x25
    19ca:	8e a1       	ldd	r24, Y+38	; 0x26
    19cc:	9f a1       	ldd	r25, Y+39	; 0x27
    19ce:	20 e0       	ldi	r18, 0x00	; 0
    19d0:	30 e0       	ldi	r19, 0x00	; 0
    19d2:	40 e2       	ldi	r20, 0x20	; 32
    19d4:	51 e4       	ldi	r21, 0x41	; 65
    19d6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19da:	dc 01       	movw	r26, r24
    19dc:	cb 01       	movw	r24, r22
    19de:	bc 01       	movw	r22, r24
    19e0:	cd 01       	movw	r24, r26
    19e2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    19e6:	dc 01       	movw	r26, r24
    19e8:	cb 01       	movw	r24, r22
    19ea:	9f 8f       	std	Y+31, r25	; 0x1f
    19ec:	8e 8f       	std	Y+30, r24	; 0x1e
    19ee:	0f c0       	rjmp	.+30     	; 0x1a0e <main+0xbae>
    19f0:	89 e1       	ldi	r24, 0x19	; 25
    19f2:	90 e0       	ldi	r25, 0x00	; 0
    19f4:	9d 8f       	std	Y+29, r25	; 0x1d
    19f6:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    19f8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    19fa:	9d 8d       	ldd	r25, Y+29	; 0x1d
    19fc:	01 97       	sbiw	r24, 0x01	; 1
    19fe:	f1 f7       	brne	.-4      	; 0x19fc <main+0xb9c>
    1a00:	9d 8f       	std	Y+29, r25	; 0x1d
    1a02:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a04:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a06:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a08:	01 97       	sbiw	r24, 0x01	; 1
    1a0a:	9f 8f       	std	Y+31, r25	; 0x1f
    1a0c:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a0e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a10:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a12:	00 97       	sbiw	r24, 0x00	; 0
    1a14:	69 f7       	brne	.-38     	; 0x19f0 <main+0xb90>
    1a16:	24 c0       	rjmp	.+72     	; 0x1a60 <main+0xc00>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a18:	68 a1       	ldd	r22, Y+32	; 0x20
    1a1a:	79 a1       	ldd	r23, Y+33	; 0x21
    1a1c:	8a a1       	ldd	r24, Y+34	; 0x22
    1a1e:	9b a1       	ldd	r25, Y+35	; 0x23
    1a20:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a24:	dc 01       	movw	r26, r24
    1a26:	cb 01       	movw	r24, r22
    1a28:	9f 8f       	std	Y+31, r25	; 0x1f
    1a2a:	8e 8f       	std	Y+30, r24	; 0x1e
    1a2c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a2e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a30:	9b 8f       	std	Y+27, r25	; 0x1b
    1a32:	8a 8f       	std	Y+26, r24	; 0x1a
    1a34:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1a36:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1a38:	01 97       	sbiw	r24, 0x01	; 1
    1a3a:	f1 f7       	brne	.-4      	; 0x1a38 <main+0xbd8>
    1a3c:	9b 8f       	std	Y+27, r25	; 0x1b
    1a3e:	8a 8f       	std	Y+26, r24	; 0x1a
    1a40:	0f c0       	rjmp	.+30     	; 0x1a60 <main+0xc00>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1a42:	69 a5       	ldd	r22, Y+41	; 0x29
    1a44:	7a a5       	ldd	r23, Y+42	; 0x2a
    1a46:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a48:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a4a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a4e:	dc 01       	movw	r26, r24
    1a50:	cb 01       	movw	r24, r22
    1a52:	88 a7       	std	Y+40, r24	; 0x28
    1a54:	88 a5       	ldd	r24, Y+40	; 0x28
    1a56:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1a58:	89 8d       	ldd	r24, Y+25	; 0x19
    1a5a:	8a 95       	dec	r24
    1a5c:	f1 f7       	brne	.-4      	; 0x1a5a <main+0xbfa>
    1a5e:	89 8f       	std	Y+25, r24	; 0x19
    	_delay_us(10);
		PORTA &=0xC0;//disable initialized PORTA pins
    1a60:	ab e3       	ldi	r26, 0x3B	; 59
    1a62:	b0 e0       	ldi	r27, 0x00	; 0
    1a64:	eb e3       	ldi	r30, 0x3B	; 59
    1a66:	f0 e0       	ldi	r31, 0x00	; 0
    1a68:	80 81       	ld	r24, Z
    1a6a:	80 7c       	andi	r24, 0xC0	; 192
    1a6c:	8c 93       	st	X, r24
    	PORTC =(PORTC&0xF0)|(hours/10);//display hour 2
    1a6e:	a5 e3       	ldi	r26, 0x35	; 53
    1a70:	b0 e0       	ldi	r27, 0x00	; 0
    1a72:	e5 e3       	ldi	r30, 0x35	; 53
    1a74:	f0 e0       	ldi	r31, 0x00	; 0
    1a76:	80 81       	ld	r24, Z
    1a78:	28 2f       	mov	r18, r24
    1a7a:	20 7f       	andi	r18, 0xF0	; 240
    1a7c:	80 91 6a 00 	lds	r24, 0x006A
    1a80:	9a e0       	ldi	r25, 0x0A	; 10
    1a82:	69 2f       	mov	r22, r25
    1a84:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <__udivmodqi4>
    1a88:	82 2b       	or	r24, r18
    1a8a:	8c 93       	st	X, r24
    	PORTA |=0x01;//enable PA0 for hour 2
    1a8c:	ab e3       	ldi	r26, 0x3B	; 59
    1a8e:	b0 e0       	ldi	r27, 0x00	; 0
    1a90:	eb e3       	ldi	r30, 0x3B	; 59
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	80 81       	ld	r24, Z
    1a96:	81 60       	ori	r24, 0x01	; 1
    1a98:	8c 93       	st	X, r24
    1a9a:	80 e0       	ldi	r24, 0x00	; 0
    1a9c:	90 e0       	ldi	r25, 0x00	; 0
    1a9e:	a0 e2       	ldi	r26, 0x20	; 32
    1aa0:	b1 e4       	ldi	r27, 0x41	; 65
    1aa2:	8d 8b       	std	Y+21, r24	; 0x15
    1aa4:	9e 8b       	std	Y+22, r25	; 0x16
    1aa6:	af 8b       	std	Y+23, r26	; 0x17
    1aa8:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1aaa:	6d 89       	ldd	r22, Y+21	; 0x15
    1aac:	7e 89       	ldd	r23, Y+22	; 0x16
    1aae:	8f 89       	ldd	r24, Y+23	; 0x17
    1ab0:	98 8d       	ldd	r25, Y+24	; 0x18
    1ab2:	2b ea       	ldi	r18, 0xAB	; 171
    1ab4:	3a ea       	ldi	r19, 0xAA	; 170
    1ab6:	4a ea       	ldi	r20, 0xAA	; 170
    1ab8:	5e e3       	ldi	r21, 0x3E	; 62
    1aba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1abe:	dc 01       	movw	r26, r24
    1ac0:	cb 01       	movw	r24, r22
    1ac2:	89 8b       	std	Y+17, r24	; 0x11
    1ac4:	9a 8b       	std	Y+18, r25	; 0x12
    1ac6:	ab 8b       	std	Y+19, r26	; 0x13
    1ac8:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    1aca:	69 89       	ldd	r22, Y+17	; 0x11
    1acc:	7a 89       	ldd	r23, Y+18	; 0x12
    1ace:	8b 89       	ldd	r24, Y+19	; 0x13
    1ad0:	9c 89       	ldd	r25, Y+20	; 0x14
    1ad2:	20 e0       	ldi	r18, 0x00	; 0
    1ad4:	30 e0       	ldi	r19, 0x00	; 0
    1ad6:	40 e8       	ldi	r20, 0x80	; 128
    1ad8:	5f e3       	ldi	r21, 0x3F	; 63
    1ada:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ade:	88 23       	and	r24, r24
    1ae0:	1c f4       	brge	.+6      	; 0x1ae8 <main+0xc88>
		__ticks = 1;
    1ae2:	81 e0       	ldi	r24, 0x01	; 1
    1ae4:	88 8b       	std	Y+16, r24	; 0x10
    1ae6:	91 c0       	rjmp	.+290    	; 0x1c0a <main+0xdaa>
	else if (__tmp > 255)
    1ae8:	69 89       	ldd	r22, Y+17	; 0x11
    1aea:	7a 89       	ldd	r23, Y+18	; 0x12
    1aec:	8b 89       	ldd	r24, Y+19	; 0x13
    1aee:	9c 89       	ldd	r25, Y+20	; 0x14
    1af0:	20 e0       	ldi	r18, 0x00	; 0
    1af2:	30 e0       	ldi	r19, 0x00	; 0
    1af4:	4f e7       	ldi	r20, 0x7F	; 127
    1af6:	53 e4       	ldi	r21, 0x43	; 67
    1af8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1afc:	18 16       	cp	r1, r24
    1afe:	0c f0       	brlt	.+2      	; 0x1b02 <main+0xca2>
    1b00:	7b c0       	rjmp	.+246    	; 0x1bf8 <main+0xd98>
	{
		_delay_ms(__us / 1000.0);
    1b02:	6d 89       	ldd	r22, Y+21	; 0x15
    1b04:	7e 89       	ldd	r23, Y+22	; 0x16
    1b06:	8f 89       	ldd	r24, Y+23	; 0x17
    1b08:	98 8d       	ldd	r25, Y+24	; 0x18
    1b0a:	20 e0       	ldi	r18, 0x00	; 0
    1b0c:	30 e0       	ldi	r19, 0x00	; 0
    1b0e:	4a e7       	ldi	r20, 0x7A	; 122
    1b10:	54 e4       	ldi	r21, 0x44	; 68
    1b12:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1b16:	dc 01       	movw	r26, r24
    1b18:	cb 01       	movw	r24, r22
    1b1a:	8c 87       	std	Y+12, r24	; 0x0c
    1b1c:	9d 87       	std	Y+13, r25	; 0x0d
    1b1e:	ae 87       	std	Y+14, r26	; 0x0e
    1b20:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b22:	6c 85       	ldd	r22, Y+12	; 0x0c
    1b24:	7d 85       	ldd	r23, Y+13	; 0x0d
    1b26:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b28:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b2a:	20 e0       	ldi	r18, 0x00	; 0
    1b2c:	30 e0       	ldi	r19, 0x00	; 0
    1b2e:	4a e7       	ldi	r20, 0x7A	; 122
    1b30:	53 e4       	ldi	r21, 0x43	; 67
    1b32:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b36:	dc 01       	movw	r26, r24
    1b38:	cb 01       	movw	r24, r22
    1b3a:	88 87       	std	Y+8, r24	; 0x08
    1b3c:	99 87       	std	Y+9, r25	; 0x09
    1b3e:	aa 87       	std	Y+10, r26	; 0x0a
    1b40:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    1b42:	68 85       	ldd	r22, Y+8	; 0x08
    1b44:	79 85       	ldd	r23, Y+9	; 0x09
    1b46:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b48:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	30 e0       	ldi	r19, 0x00	; 0
    1b4e:	40 e8       	ldi	r20, 0x80	; 128
    1b50:	5f e3       	ldi	r21, 0x3F	; 63
    1b52:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1b56:	88 23       	and	r24, r24
    1b58:	2c f4       	brge	.+10     	; 0x1b64 <main+0xd04>
		__ticks = 1;
    1b5a:	81 e0       	ldi	r24, 0x01	; 1
    1b5c:	90 e0       	ldi	r25, 0x00	; 0
    1b5e:	9f 83       	std	Y+7, r25	; 0x07
    1b60:	8e 83       	std	Y+6, r24	; 0x06
    1b62:	3f c0       	rjmp	.+126    	; 0x1be2 <main+0xd82>
	else if (__tmp > 65535)
    1b64:	68 85       	ldd	r22, Y+8	; 0x08
    1b66:	79 85       	ldd	r23, Y+9	; 0x09
    1b68:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b6a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b6c:	20 e0       	ldi	r18, 0x00	; 0
    1b6e:	3f ef       	ldi	r19, 0xFF	; 255
    1b70:	4f e7       	ldi	r20, 0x7F	; 127
    1b72:	57 e4       	ldi	r21, 0x47	; 71
    1b74:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1b78:	18 16       	cp	r1, r24
    1b7a:	4c f5       	brge	.+82     	; 0x1bce <main+0xd6e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b7c:	6c 85       	ldd	r22, Y+12	; 0x0c
    1b7e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1b80:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b82:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b84:	20 e0       	ldi	r18, 0x00	; 0
    1b86:	30 e0       	ldi	r19, 0x00	; 0
    1b88:	40 e2       	ldi	r20, 0x20	; 32
    1b8a:	51 e4       	ldi	r21, 0x41	; 65
    1b8c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b90:	dc 01       	movw	r26, r24
    1b92:	cb 01       	movw	r24, r22
    1b94:	bc 01       	movw	r22, r24
    1b96:	cd 01       	movw	r24, r26
    1b98:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b9c:	dc 01       	movw	r26, r24
    1b9e:	cb 01       	movw	r24, r22
    1ba0:	9f 83       	std	Y+7, r25	; 0x07
    1ba2:	8e 83       	std	Y+6, r24	; 0x06
    1ba4:	0f c0       	rjmp	.+30     	; 0x1bc4 <main+0xd64>
    1ba6:	89 e1       	ldi	r24, 0x19	; 25
    1ba8:	90 e0       	ldi	r25, 0x00	; 0
    1baa:	9d 83       	std	Y+5, r25	; 0x05
    1bac:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1bae:	8c 81       	ldd	r24, Y+4	; 0x04
    1bb0:	9d 81       	ldd	r25, Y+5	; 0x05
    1bb2:	01 97       	sbiw	r24, 0x01	; 1
    1bb4:	f1 f7       	brne	.-4      	; 0x1bb2 <main+0xd52>
    1bb6:	9d 83       	std	Y+5, r25	; 0x05
    1bb8:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bba:	8e 81       	ldd	r24, Y+6	; 0x06
    1bbc:	9f 81       	ldd	r25, Y+7	; 0x07
    1bbe:	01 97       	sbiw	r24, 0x01	; 1
    1bc0:	9f 83       	std	Y+7, r25	; 0x07
    1bc2:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bc4:	8e 81       	ldd	r24, Y+6	; 0x06
    1bc6:	9f 81       	ldd	r25, Y+7	; 0x07
    1bc8:	00 97       	sbiw	r24, 0x00	; 0
    1bca:	69 f7       	brne	.-38     	; 0x1ba6 <main+0xd46>
    1bcc:	24 c0       	rjmp	.+72     	; 0x1c16 <main+0xdb6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bce:	68 85       	ldd	r22, Y+8	; 0x08
    1bd0:	79 85       	ldd	r23, Y+9	; 0x09
    1bd2:	8a 85       	ldd	r24, Y+10	; 0x0a
    1bd4:	9b 85       	ldd	r25, Y+11	; 0x0b
    1bd6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bda:	dc 01       	movw	r26, r24
    1bdc:	cb 01       	movw	r24, r22
    1bde:	9f 83       	std	Y+7, r25	; 0x07
    1be0:	8e 83       	std	Y+6, r24	; 0x06
    1be2:	8e 81       	ldd	r24, Y+6	; 0x06
    1be4:	9f 81       	ldd	r25, Y+7	; 0x07
    1be6:	9b 83       	std	Y+3, r25	; 0x03
    1be8:	8a 83       	std	Y+2, r24	; 0x02
    1bea:	8a 81       	ldd	r24, Y+2	; 0x02
    1bec:	9b 81       	ldd	r25, Y+3	; 0x03
    1bee:	01 97       	sbiw	r24, 0x01	; 1
    1bf0:	f1 f7       	brne	.-4      	; 0x1bee <main+0xd8e>
    1bf2:	9b 83       	std	Y+3, r25	; 0x03
    1bf4:	8a 83       	std	Y+2, r24	; 0x02
    1bf6:	0f c0       	rjmp	.+30     	; 0x1c16 <main+0xdb6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1bf8:	69 89       	ldd	r22, Y+17	; 0x11
    1bfa:	7a 89       	ldd	r23, Y+18	; 0x12
    1bfc:	8b 89       	ldd	r24, Y+19	; 0x13
    1bfe:	9c 89       	ldd	r25, Y+20	; 0x14
    1c00:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c04:	dc 01       	movw	r26, r24
    1c06:	cb 01       	movw	r24, r22
    1c08:	88 8b       	std	Y+16, r24	; 0x10
    1c0a:	88 89       	ldd	r24, Y+16	; 0x10
    1c0c:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1c0e:	89 81       	ldd	r24, Y+1	; 0x01
    1c10:	8a 95       	dec	r24
    1c12:	f1 f7       	brne	.-4      	; 0x1c10 <main+0xdb0>
    1c14:	89 83       	std	Y+1, r24	; 0x01
    	_delay_us(10);
		PORTA &=0xC0;//disable initialized PORTA pins
    1c16:	ab e3       	ldi	r26, 0x3B	; 59
    1c18:	b0 e0       	ldi	r27, 0x00	; 0
    1c1a:	eb e3       	ldi	r30, 0x3B	; 59
    1c1c:	f0 e0       	ldi	r31, 0x00	; 0
    1c1e:	80 81       	ld	r24, Z
    1c20:	80 7c       	andi	r24, 0xC0	; 192
    1c22:	8c 93       	st	X, r24
    1c24:	73 c9       	rjmp	.-3354   	; 0xf0c <main+0xac>

00001c26 <__udivmodqi4>:
    1c26:	99 1b       	sub	r25, r25
    1c28:	79 e0       	ldi	r23, 0x09	; 9
    1c2a:	04 c0       	rjmp	.+8      	; 0x1c34 <__udivmodqi4_ep>

00001c2c <__udivmodqi4_loop>:
    1c2c:	99 1f       	adc	r25, r25
    1c2e:	96 17       	cp	r25, r22
    1c30:	08 f0       	brcs	.+2      	; 0x1c34 <__udivmodqi4_ep>
    1c32:	96 1b       	sub	r25, r22

00001c34 <__udivmodqi4_ep>:
    1c34:	88 1f       	adc	r24, r24
    1c36:	7a 95       	dec	r23
    1c38:	c9 f7       	brne	.-14     	; 0x1c2c <__udivmodqi4_loop>
    1c3a:	80 95       	com	r24
    1c3c:	08 95       	ret

00001c3e <__prologue_saves__>:
    1c3e:	2f 92       	push	r2
    1c40:	3f 92       	push	r3
    1c42:	4f 92       	push	r4
    1c44:	5f 92       	push	r5
    1c46:	6f 92       	push	r6
    1c48:	7f 92       	push	r7
    1c4a:	8f 92       	push	r8
    1c4c:	9f 92       	push	r9
    1c4e:	af 92       	push	r10
    1c50:	bf 92       	push	r11
    1c52:	cf 92       	push	r12
    1c54:	df 92       	push	r13
    1c56:	ef 92       	push	r14
    1c58:	ff 92       	push	r15
    1c5a:	0f 93       	push	r16
    1c5c:	1f 93       	push	r17
    1c5e:	cf 93       	push	r28
    1c60:	df 93       	push	r29
    1c62:	cd b7       	in	r28, 0x3d	; 61
    1c64:	de b7       	in	r29, 0x3e	; 62
    1c66:	ca 1b       	sub	r28, r26
    1c68:	db 0b       	sbc	r29, r27
    1c6a:	0f b6       	in	r0, 0x3f	; 63
    1c6c:	f8 94       	cli
    1c6e:	de bf       	out	0x3e, r29	; 62
    1c70:	0f be       	out	0x3f, r0	; 63
    1c72:	cd bf       	out	0x3d, r28	; 61
    1c74:	09 94       	ijmp

00001c76 <__epilogue_restores__>:
    1c76:	2a 88       	ldd	r2, Y+18	; 0x12
    1c78:	39 88       	ldd	r3, Y+17	; 0x11
    1c7a:	48 88       	ldd	r4, Y+16	; 0x10
    1c7c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c7e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c80:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c82:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c84:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c86:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c88:	b9 84       	ldd	r11, Y+9	; 0x09
    1c8a:	c8 84       	ldd	r12, Y+8	; 0x08
    1c8c:	df 80       	ldd	r13, Y+7	; 0x07
    1c8e:	ee 80       	ldd	r14, Y+6	; 0x06
    1c90:	fd 80       	ldd	r15, Y+5	; 0x05
    1c92:	0c 81       	ldd	r16, Y+4	; 0x04
    1c94:	1b 81       	ldd	r17, Y+3	; 0x03
    1c96:	aa 81       	ldd	r26, Y+2	; 0x02
    1c98:	b9 81       	ldd	r27, Y+1	; 0x01
    1c9a:	ce 0f       	add	r28, r30
    1c9c:	d1 1d       	adc	r29, r1
    1c9e:	0f b6       	in	r0, 0x3f	; 63
    1ca0:	f8 94       	cli
    1ca2:	de bf       	out	0x3e, r29	; 62
    1ca4:	0f be       	out	0x3f, r0	; 63
    1ca6:	cd bf       	out	0x3d, r28	; 61
    1ca8:	ed 01       	movw	r28, r26
    1caa:	08 95       	ret

00001cac <_exit>:
    1cac:	f8 94       	cli

00001cae <__stop_program>:
    1cae:	ff cf       	rjmp	.-2      	; 0x1cae <__stop_program>
